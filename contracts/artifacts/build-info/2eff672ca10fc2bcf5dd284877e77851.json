{
	"id": "2eff672ca10fc2bcf5dd284877e77851",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.16",
	"solcLongVersion": "0.5.16+commit.9c3226ce",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/FOTOM.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.5.16;\r\n\r\nimport './interfaces/IFOTOM.sol';\r\nimport './libraries/SafeMath.sol';\r\n\r\ncontract FOTOM is IFOTOM {\r\n    using SafeMath for uint;\r\n    uint256 constant MAX = 2**256-1;\r\n    string public constant name = 'Uniswap V2';\r\n    string public constant symbol = 'UNI-V2';\r\n    uint8 public constant decimals = 18;\r\n    uint  public totalSupply;\r\n    mapping(address => uint) public balanceOf;\r\n    mapping(address => mapping(address => uint)) public allowance;\r\n\r\n    bytes32 public DOMAIN_SEPARATOR;\r\n    // keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\r\n    bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9;\r\n    mapping(address => uint) public nonces;\r\n\r\n    //event Approval(address indexed owner, address indexed spender, uint value);\r\n    //event Transfer(address indexed from, address indexed to, uint value);\r\n\r\n    constructor() public {\r\n        uint chainId;\r\n        assembly {\r\n            chainId := chainid\r\n        }\r\n        DOMAIN_SEPARATOR = keccak256(\r\n            abi.encode(\r\n                keccak256('EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)'),\r\n                keccak256(bytes(name)),\r\n                keccak256(bytes('1')),\r\n                chainId,\r\n                address(this)\r\n            )\r\n        );\r\n    }\r\n\r\n    function _mint(address to, uint value) internal {\r\n        totalSupply = totalSupply.add(value);\r\n        balanceOf[to] = balanceOf[to].add(value);\r\n        emit Transfer(address(0), to, value);\r\n    }\r\n\r\n    function _burn(address from, uint value) internal {\r\n        balanceOf[from] = balanceOf[from].sub(value);\r\n        totalSupply = totalSupply.sub(value);\r\n        emit Transfer(from, address(0), value);\r\n    }\r\n\r\n    function _approve(address owner, address spender, uint value) private {\r\n        allowance[owner][spender] = value;\r\n        emit Approval(owner, spender, value);\r\n    }\r\n\r\n    function _transfer(address from, address to, uint value) private {\r\n        balanceOf[from] = balanceOf[from].sub(value);\r\n        balanceOf[to] = balanceOf[to].add(value);\r\n        emit Transfer(from, to, value);\r\n    }\r\n\r\n    function approve(address spender, uint value) external returns (bool) {\r\n        _approve(msg.sender, spender, value);\r\n        return true;\r\n    }\r\n\r\n    function transfer(address to, uint value) external returns (bool) {\r\n        _transfer(msg.sender, to, value);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address from, address to, uint value) external returns (bool) {\r\n        if (allowance[from][msg.sender] != MAX) {\r\n            allowance[from][msg.sender] = allowance[from][msg.sender].sub(value);\r\n        }\r\n        _transfer(from, to, value);\r\n        return true;\r\n    }\r\n\r\n    function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external {\r\n        require(deadline >= block.timestamp, 'FSwap: EXPIRED');\r\n        bytes32 digest = keccak256(\r\n            abi.encodePacked(\r\n                '\\x19\\x01',\r\n                DOMAIN_SEPARATOR,\r\n                keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline))\r\n            )\r\n        );\r\n        address recoveredAddress = ecrecover(digest, v, r, s);\r\n        require(recoveredAddress != address(0) && recoveredAddress == owner, 'FSwap: INVALID_SIGNATURE');\r\n        _approve(owner, spender, value);\r\n    }\r\n}\r\n"
			},
			"contracts/libraries/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.5.16;\r\n\r\n// a library for performing overflow-safe math, courtesy of DappHub (https://github.com/dapphub/ds-math)\r\n\r\nlibrary SafeMath {\r\n    function add(uint x, uint y) internal pure returns (uint z) {\r\n        require((z = x + y) >= x, 'ds-math-add-overflow');\r\n    }\r\n\r\n    function sub(uint x, uint y) internal pure returns (uint z) {\r\n        require((z = x - y) <= x, 'ds-math-sub-underflow');\r\n    }\r\n\r\n    function mul(uint x, uint y) internal pure returns (uint z) {\r\n        require(y == 0 || (z = x * y) / y == x, 'ds-math-mul-overflow');\r\n    }\r\n}\r\n"
			},
			"contracts/interfaces/IFOTOM.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.5.0;\r\n\r\ninterface IFOTOM {\r\n    event Approval(address indexed owner, address indexed spender, uint value);\r\n    event Transfer(address indexed from, address indexed to, uint value);\r\n\r\n    function name() external pure returns (string memory);\r\n    function symbol() external pure returns (string memory);\r\n    function decimals() external pure returns (uint8);\r\n    function totalSupply() external view returns (uint);\r\n    function balanceOf(address owner) external view returns (uint);\r\n    function allowance(address owner, address spender) external view returns (uint);\r\n\r\n    function approve(address spender, uint value) external returns (bool);\r\n    function transfer(address to, uint value) external returns (bool);\r\n    function transferFrom(address from, address to, uint value) external returns (bool);\r\n\r\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\r\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\r\n    function nonces(address owner) external view returns (uint);\r\n\r\n    function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/FOTOM.sol": {
				"FOTOM": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/FOTOM.sol\":135:3561  contract FOTOM is IFOTOM {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/FOTOM.sol\":989:1447  constructor() public {\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/FOTOM.sol\":989:1447  constructor() public {\r... */\n  pop\n    /* \"contracts/FOTOM.sol\":1021:1033  uint chainId */\n  0x00\n    /* \"contracts/FOTOM.sol\":1079:1086  chainid */\n  chainid\n    /* \"contracts/FOTOM.sol\":1068:1086  chainId := chainid */\n  swap1\n  pop\n    /* \"contracts/FOTOM.sol\":1179:1274  keccak256('EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)') */\n  mload(0x40)\n  dup1\n  dup1\n  data_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n  0x52\n  swap2\n  codecopy\n  0x52\n  add\n  swap1\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  keccak256\n    /* \"contracts/FOTOM.sol\":1309:1313  name */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0a\n  dup2\n  mstore\n  0x20\n  add\n  0x556e697377617020563200000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/FOTOM.sol\":1293:1315  keccak256(bytes(name)) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"contracts/FOTOM.sol\":1344:1354  bytes('1') */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x01\n  dup2\n  mstore\n  0x20\n  add\n  0x3100000000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/FOTOM.sol\":1334:1355  keccak256(bytes('1')) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"contracts/FOTOM.sol\":1374:1381  chainId */\n  dup4\n    /* \"contracts/FOTOM.sol\":1408:1412  this */\n  address\n    /* \"contracts/FOTOM.sol\":1150:1428  abi.encode(\r... */\n  add(0x20, mload(0x40))\n  dup1\n  dup7\n  dup2\n  mstore\n  0x20\n  add\n  dup6\n  dup2\n  mstore\n  0x20\n  add\n  dup5\n  dup2\n  mstore\n  0x20\n  add\n  dup4\n  dup2\n  mstore\n  0x20\n  add\n  dup3\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n    /* \"--CODEGEN--\":49:53   */\n  0x20\n    /* \"--CODEGEN--\":39:46   */\n  dup2\n    /* \"--CODEGEN--\":30:37   */\n  dup4\n    /* \"--CODEGEN--\":26:47   */\n  sub\n    /* \"--CODEGEN--\":22:54   */\n  sub\n    /* \"--CODEGEN--\":13:20   */\n  dup2\n    /* \"--CODEGEN--\":6:55   */\n  mstore\n    /* \"contracts/FOTOM.sol\":1150:1428  abi.encode(\r... */\n  swap1\n  0x40\n  mstore\n    /* \"contracts/FOTOM.sol\":1126:1439  keccak256(\r... */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"contracts/FOTOM.sol\":1107:1123  DOMAIN_SEPARATOR */\n  0x03\n    /* \"contracts/FOTOM.sol\":1107:1439  DOMAIN_SEPARATOR = keccak256(\r... */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/FOTOM.sol\":989:1447  constructor() public {\r... */\n  pop\n    /* \"contracts/FOTOM.sol\":135:3561  contract FOTOM is IFOTOM {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f 454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429\n\nsub_0: assembly {\n        /* \"contracts/FOTOM.sol\":135:3561  contract FOTOM is IFOTOM {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"contracts/FOTOM.sol\":135:3561  contract FOTOM is IFOTOM {\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3644e515\n      gt\n      tag_16\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_17\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xd505accf\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x3644e515\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x7ecebe00\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_16:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x30adf81f\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/FOTOM.sol\":235:277  string public constant name = 'Uniswap V2' */\n    tag_3:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_20:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_22\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_20)\n    tag_22:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/FOTOM.sol\":235:277  string public constant name = 'Uniswap V2' */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_23\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_23:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FOTOM.sol\":2286:2433  function approve(address spender, uint value) external returns (bool) {\r... */\n    tag_4:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_25\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_25:\n        /* \"contracts/FOTOM.sol\":2286:2433  function approve(address spender, uint value) external returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_26\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FOTOM.sol\":373:397  uint  public totalSupply */\n    tag_5:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FOTOM.sol\":2588:2884  function transferFrom(address from, address to, uint value) external returns (bool) {\r... */\n    tag_6:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_30\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_30:\n        /* \"contracts/FOTOM.sol\":2588:2884  function transferFrom(address from, address to, uint value) external returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_31\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FOTOM.sol\":665:773  bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n    tag_7:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FOTOM.sol\":331:366  uint8 public constant decimals = 18 */\n    tag_8:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FOTOM.sol\":522:553  bytes32 public DOMAIN_SEPARATOR */\n    tag_9:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FOTOM.sol\":404:445  mapping(address => uint) public balanceOf */\n    tag_10:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_39\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_39:\n        /* \"contracts/FOTOM.sol\":404:445  mapping(address => uint) public balanceOf */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_40\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FOTOM.sol\":780:818  mapping(address => uint) public nonces */\n    tag_11:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_42\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_42:\n        /* \"contracts/FOTOM.sol\":780:818  mapping(address => uint) public nonces */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_43\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FOTOM.sol\":284:324  string public constant symbol = 'UNI-V2' */\n    tag_12:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_46:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_48\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_46)\n    tag_48:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/FOTOM.sol\":284:324  string public constant symbol = 'UNI-V2' */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_49\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_49:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FOTOM.sol\":2441:2580  function transfer(address to, uint value) external returns (bool) {\r... */\n    tag_13:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_51\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_51:\n        /* \"contracts/FOTOM.sol\":2441:2580  function transfer(address to, uint value) external returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_52\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FOTOM.sol\":2892:3558  function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external {\r... */\n    tag_14:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:16   */\n      0xe0\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:17   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_54\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_54:\n        /* \"contracts/FOTOM.sol\":2892:3558  function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_55\n      jump\t// in\n    tag_53:\n      stop\n        /* \"contracts/FOTOM.sol\":452:513  mapping(address => mapping(address => uint)) public allowance */\n    tag_15:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_57\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_57:\n        /* \"contracts/FOTOM.sol\":452:513  mapping(address => mapping(address => uint)) public allowance */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_58\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FOTOM.sol\":235:277  string public constant name = 'Uniswap V2' */\n    tag_19:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x0a\n      dup2\n      mstore\n      0x20\n      add\n      0x556e697377617020563200000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/FOTOM.sol\":2286:2433  function approve(address spender, uint value) external returns (bool) {\r... */\n    tag_26:\n        /* \"contracts/FOTOM.sol\":2350:2354  bool */\n      0x00\n        /* \"contracts/FOTOM.sol\":2367:2403  _approve(msg.sender, spender, value) */\n      tag_60\n        /* \"contracts/FOTOM.sol\":2376:2386  msg.sender */\n      caller\n        /* \"contracts/FOTOM.sol\":2388:2395  spender */\n      dup5\n        /* \"contracts/FOTOM.sol\":2397:2402  value */\n      dup5\n        /* \"contracts/FOTOM.sol\":2367:2375  _approve */\n      tag_61\n        /* \"contracts/FOTOM.sol\":2367:2403  _approve(msg.sender, spender, value) */\n      jump\t// in\n    tag_60:\n        /* \"contracts/FOTOM.sol\":2421:2425  true */\n      0x01\n        /* \"contracts/FOTOM.sol\":2414:2425  return true */\n      swap1\n      pop\n        /* \"contracts/FOTOM.sol\":2286:2433  function approve(address spender, uint value) external returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/FOTOM.sol\":373:397  uint  public totalSupply */\n    tag_28:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"contracts/FOTOM.sol\":2588:2884  function transferFrom(address from, address to, uint value) external returns (bool) {\r... */\n    tag_31:\n        /* \"contracts/FOTOM.sol\":2666:2670  bool */\n      0x00\n        /* \"contracts/FOTOM.sol\":220:228  2**256-1 */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/FOTOM.sol\":2687:2696  allowance */\n      0x02\n        /* \"contracts/FOTOM.sol\":2687:2702  allowance[from] */\n      0x00\n        /* \"contracts/FOTOM.sol\":2697:2701  from */\n      dup7\n        /* \"contracts/FOTOM.sol\":2687:2702  allowance[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/FOTOM.sol\":2687:2714  allowance[from][msg.sender] */\n      0x00\n        /* \"contracts/FOTOM.sol\":2703:2713  msg.sender */\n      caller\n        /* \"contracts/FOTOM.sol\":2687:2714  allowance[from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/FOTOM.sol\":2687:2721  allowance[from][msg.sender] != MAX */\n      eq\n        /* \"contracts/FOTOM.sol\":2683:2818  if (allowance[from][msg.sender] != MAX) {\r... */\n      tag_63\n      jumpi\n        /* \"contracts/FOTOM.sol\":2768:2806  allowance[from][msg.sender].sub(value) */\n      tag_64\n        /* \"contracts/FOTOM.sol\":2800:2805  value */\n      dup3\n        /* \"contracts/FOTOM.sol\":2768:2777  allowance */\n      0x02\n        /* \"contracts/FOTOM.sol\":2768:2783  allowance[from] */\n      0x00\n        /* \"contracts/FOTOM.sol\":2778:2782  from */\n      dup8\n        /* \"contracts/FOTOM.sol\":2768:2783  allowance[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/FOTOM.sol\":2768:2795  allowance[from][msg.sender] */\n      0x00\n        /* \"contracts/FOTOM.sol\":2784:2794  msg.sender */\n      caller\n        /* \"contracts/FOTOM.sol\":2768:2795  allowance[from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/FOTOM.sol\":2768:2799  allowance[from][msg.sender].sub */\n      tag_65\n      swap1\n        /* \"contracts/FOTOM.sol\":2768:2806  allowance[from][msg.sender].sub(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_64:\n        /* \"contracts/FOTOM.sol\":2738:2747  allowance */\n      0x02\n        /* \"contracts/FOTOM.sol\":2738:2753  allowance[from] */\n      0x00\n        /* \"contracts/FOTOM.sol\":2748:2752  from */\n      dup7\n        /* \"contracts/FOTOM.sol\":2738:2753  allowance[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/FOTOM.sol\":2738:2765  allowance[from][msg.sender] */\n      0x00\n        /* \"contracts/FOTOM.sol\":2754:2764  msg.sender */\n      caller\n        /* \"contracts/FOTOM.sol\":2738:2765  allowance[from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/FOTOM.sol\":2738:2806  allowance[from][msg.sender] = allowance[from][msg.sender].sub(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/FOTOM.sol\":2683:2818  if (allowance[from][msg.sender] != MAX) {\r... */\n    tag_63:\n        /* \"contracts/FOTOM.sol\":2828:2854  _transfer(from, to, value) */\n      tag_66\n        /* \"contracts/FOTOM.sol\":2838:2842  from */\n      dup5\n        /* \"contracts/FOTOM.sol\":2844:2846  to */\n      dup5\n        /* \"contracts/FOTOM.sol\":2848:2853  value */\n      dup5\n        /* \"contracts/FOTOM.sol\":2828:2837  _transfer */\n      tag_67\n        /* \"contracts/FOTOM.sol\":2828:2854  _transfer(from, to, value) */\n      jump\t// in\n    tag_66:\n        /* \"contracts/FOTOM.sol\":2872:2876  true */\n      0x01\n        /* \"contracts/FOTOM.sol\":2865:2876  return true */\n      swap1\n      pop\n        /* \"contracts/FOTOM.sol\":2588:2884  function transferFrom(address from, address to, uint value) external returns (bool) {\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/FOTOM.sol\":665:773  bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n    tag_33:\n        /* \"contracts/FOTOM.sol\":707:773  0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n        /* \"contracts/FOTOM.sol\":665:773  bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      0x00\n      shl\n      dup2\n      jump\t// out\n        /* \"contracts/FOTOM.sol\":331:366  uint8 public constant decimals = 18 */\n    tag_35:\n        /* \"contracts/FOTOM.sol\":364:366  18 */\n      0x12\n        /* \"contracts/FOTOM.sol\":331:366  uint8 public constant decimals = 18 */\n      dup2\n      jump\t// out\n        /* \"contracts/FOTOM.sol\":522:553  bytes32 public DOMAIN_SEPARATOR */\n    tag_37:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"contracts/FOTOM.sol\":404:445  mapping(address => uint) public balanceOf */\n    tag_40:\n      mstore(0x20, 0x01)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/FOTOM.sol\":780:818  mapping(address => uint) public nonces */\n    tag_43:\n      mstore(0x20, 0x04)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/FOTOM.sol\":284:324  string public constant symbol = 'UNI-V2' */\n    tag_45:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x06\n      dup2\n      mstore\n      0x20\n      add\n      0x554e492d56320000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/FOTOM.sol\":2441:2580  function transfer(address to, uint value) external returns (bool) {\r... */\n    tag_52:\n        /* \"contracts/FOTOM.sol\":2501:2505  bool */\n      0x00\n        /* \"contracts/FOTOM.sol\":2518:2550  _transfer(msg.sender, to, value) */\n      tag_69\n        /* \"contracts/FOTOM.sol\":2528:2538  msg.sender */\n      caller\n        /* \"contracts/FOTOM.sol\":2540:2542  to */\n      dup5\n        /* \"contracts/FOTOM.sol\":2544:2549  value */\n      dup5\n        /* \"contracts/FOTOM.sol\":2518:2527  _transfer */\n      tag_67\n        /* \"contracts/FOTOM.sol\":2518:2550  _transfer(msg.sender, to, value) */\n      jump\t// in\n    tag_69:\n        /* \"contracts/FOTOM.sol\":2568:2572  true */\n      0x01\n        /* \"contracts/FOTOM.sol\":2561:2572  return true */\n      swap1\n      pop\n        /* \"contracts/FOTOM.sol\":2441:2580  function transfer(address to, uint value) external returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/FOTOM.sol\":2892:3558  function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external {\r... */\n    tag_55:\n        /* \"contracts/FOTOM.sol\":3038:3053  block.timestamp */\n      timestamp\n        /* \"contracts/FOTOM.sol\":3026:3034  deadline */\n      dup5\n        /* \"contracts/FOTOM.sol\":3026:3053  deadline >= block.timestamp */\n      lt\n      iszero\n        /* \"contracts/FOTOM.sol\":3018:3072  require(deadline >= block.timestamp, 'FSwap: EXPIRED') */\n      tag_71\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x46537761703a2045585049524544000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_71:\n        /* \"contracts/FOTOM.sol\":3083:3097  bytes32 digest */\n      0x00\n        /* \"contracts/FOTOM.sol\":3188:3204  DOMAIN_SEPARATOR */\n      sload(0x03)\n        /* \"contracts/FOTOM.sol\":707:773  0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n        /* \"contracts/FOTOM.sol\":3244:3259  PERMIT_TYPEHASH */\n      0x00\n      shl\n        /* \"contracts/FOTOM.sol\":3261:3266  owner */\n      dup10\n        /* \"contracts/FOTOM.sol\":3268:3275  spender */\n      dup10\n        /* \"contracts/FOTOM.sol\":3277:3282  value */\n      dup10\n        /* \"contracts/FOTOM.sol\":3284:3290  nonces */\n      0x04\n        /* \"contracts/FOTOM.sol\":3284:3297  nonces[owner] */\n      0x00\n        /* \"contracts/FOTOM.sol\":3291:3296  owner */\n      dup15\n        /* \"contracts/FOTOM.sol\":3284:3297  nonces[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/FOTOM.sol\":3284:3299  nonces[owner]++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      0x01\n      add\n      swap2\n      swap1\n      pop\n      sstore\n        /* \"contracts/FOTOM.sol\":3301:3309  deadline */\n      dup11\n        /* \"contracts/FOTOM.sol\":3233:3310  abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline) */\n      add(0x20, mload(0x40))\n      dup1\n      dup8\n      dup2\n      mstore\n      0x20\n      add\n      dup7\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup6\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"contracts/FOTOM.sol\":3233:3310  abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline) */\n      swap1\n      0x40\n      mstore\n        /* \"contracts/FOTOM.sol\":3223:3311  keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/FOTOM.sol\":3124:3326  abi.encodePacked(\r... */\n      add(0x20, mload(0x40))\n      dup1\n      dup1\n      0x1901000000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x02\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"contracts/FOTOM.sol\":3124:3326  abi.encodePacked(\r... */\n      swap1\n      0x40\n      mstore\n        /* \"contracts/FOTOM.sol\":3100:3337  keccak256(\r... */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/FOTOM.sol\":3083:3337  bytes32 digest = keccak256(\r... */\n      swap1\n      pop\n        /* \"contracts/FOTOM.sol\":3348:3372  address recoveredAddress */\n      0x00\n        /* \"contracts/FOTOM.sol\":3375:3401  ecrecover(digest, v, r, s) */\n      0x01\n        /* \"contracts/FOTOM.sol\":3385:3391  digest */\n      dup3\n        /* \"contracts/FOTOM.sol\":3393:3394  v */\n      dup7\n        /* \"contracts/FOTOM.sol\":3396:3397  r */\n      dup7\n        /* \"contracts/FOTOM.sol\":3399:3400  s */\n      dup7\n        /* \"contracts/FOTOM.sol\":3375:3401  ecrecover(digest, v, r, s) */\n      mload(0x40)\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x40\n      mstore\n      mload(0x40)\n      dup1\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_72\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_72:\n        /* \"contracts/FOTOM.sol\":3375:3401  ecrecover(digest, v, r, s) */\n      pop\n      pop\n      pop\n      mload(sub(mload(0x40), 0x20))\n        /* \"contracts/FOTOM.sol\":3348:3401  address recoveredAddress = ecrecover(digest, v, r, s) */\n      swap1\n      pop\n        /* \"contracts/FOTOM.sol\":3448:3449  0 */\n      0x00\n        /* \"contracts/FOTOM.sol\":3420:3450  recoveredAddress != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/FOTOM.sol\":3420:3436  recoveredAddress */\n      dup2\n        /* \"contracts/FOTOM.sol\":3420:3450  recoveredAddress != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/FOTOM.sol\":3420:3479  recoveredAddress != address(0) && recoveredAddress == owner */\n      dup1\n      iszero\n      tag_73\n      jumpi\n      pop\n        /* \"contracts/FOTOM.sol\":3474:3479  owner */\n      dup9\n        /* \"contracts/FOTOM.sol\":3454:3479  recoveredAddress == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/FOTOM.sol\":3454:3470  recoveredAddress */\n      dup2\n        /* \"contracts/FOTOM.sol\":3454:3479  recoveredAddress == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/FOTOM.sol\":3420:3479  recoveredAddress != address(0) && recoveredAddress == owner */\n    tag_73:\n        /* \"contracts/FOTOM.sol\":3412:3508  require(recoveredAddress != address(0) && recoveredAddress == owner, 'FSwap: INVALID_SIGNATURE') */\n      tag_74\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x18\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x46537761703a20494e56414c49445f5349474e41545552450000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_74:\n        /* \"contracts/FOTOM.sol\":3519:3550  _approve(owner, spender, value) */\n      tag_75\n        /* \"contracts/FOTOM.sol\":3528:3533  owner */\n      dup10\n        /* \"contracts/FOTOM.sol\":3535:3542  spender */\n      dup10\n        /* \"contracts/FOTOM.sol\":3544:3549  value */\n      dup10\n        /* \"contracts/FOTOM.sol\":3519:3527  _approve */\n      tag_61\n        /* \"contracts/FOTOM.sol\":3519:3550  _approve(owner, spender, value) */\n      jump\t// in\n    tag_75:\n        /* \"contracts/FOTOM.sol\":2892:3558  function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external {\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/FOTOM.sol\":452:513  mapping(address => mapping(address => uint)) public allowance */\n    tag_58:\n      mstore(0x20, 0x02)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/FOTOM.sol\":1881:2050  function _approve(address owner, address spender, uint value) private {\r... */\n    tag_61:\n        /* \"contracts/FOTOM.sol\":1990:1995  value */\n      dup1\n        /* \"contracts/FOTOM.sol\":1962:1971  allowance */\n      0x02\n        /* \"contracts/FOTOM.sol\":1962:1978  allowance[owner] */\n      0x00\n        /* \"contracts/FOTOM.sol\":1972:1977  owner */\n      dup6\n        /* \"contracts/FOTOM.sol\":1962:1978  allowance[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/FOTOM.sol\":1962:1987  allowance[owner][spender] */\n      0x00\n        /* \"contracts/FOTOM.sol\":1979:1986  spender */\n      dup5\n        /* \"contracts/FOTOM.sol\":1962:1987  allowance[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/FOTOM.sol\":1962:1995  allowance[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/FOTOM.sol\":2027:2034  spender */\n      dup2\n        /* \"contracts/FOTOM.sol\":2011:2042  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/FOTOM.sol\":2020:2025  owner */\n      dup4\n        /* \"contracts/FOTOM.sol\":2011:2042  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/FOTOM.sol\":2036:2041  value */\n      dup4\n        /* \"contracts/FOTOM.sol\":2011:2042  Approval(owner, spender, value) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/FOTOM.sol\":1881:2050  function _approve(address owner, address spender, uint value) private {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/libraries/SafeMath.sol\":330:459  function sub(uint x, uint y) internal pure returns (uint z) {\r... */\n    tag_65:\n        /* \"contracts/libraries/SafeMath.sol\":382:388  uint z */\n      0x00\n        /* \"contracts/libraries/SafeMath.sol\":424:425  x */\n      dup3\n        /* \"contracts/libraries/SafeMath.sol\":418:419  y */\n      dup3\n        /* \"contracts/libraries/SafeMath.sol\":414:415  x */\n      dup5\n        /* \"contracts/libraries/SafeMath.sol\":414:419  x - y */\n      sub\n        /* \"contracts/libraries/SafeMath.sol\":410:419  z = x - y */\n      swap2\n      pop\n      dup2\n        /* \"contracts/libraries/SafeMath.sol\":409:425  (z = x - y) <= x */\n      gt\n      iszero\n        /* \"contracts/libraries/SafeMath.sol\":401:451  require((z = x - y) <= x, 'ds-math-sub-underflow') */\n      tag_78\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x15\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x64732d6d6174682d7375622d756e646572666c6f770000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_78:\n        /* \"contracts/libraries/SafeMath.sol\":330:459  function sub(uint x, uint y) internal pure returns (uint z) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/FOTOM.sol\":2058:2278  function _transfer(address from, address to, uint value) private {\r... */\n    tag_67:\n        /* \"contracts/FOTOM.sol\":2152:2178  balanceOf[from].sub(value) */\n      tag_80\n        /* \"contracts/FOTOM.sol\":2172:2177  value */\n      dup2\n        /* \"contracts/FOTOM.sol\":2152:2161  balanceOf */\n      0x01\n        /* \"contracts/FOTOM.sol\":2152:2167  balanceOf[from] */\n      0x00\n        /* \"contracts/FOTOM.sol\":2162:2166  from */\n      dup7\n        /* \"contracts/FOTOM.sol\":2152:2167  balanceOf[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/FOTOM.sol\":2152:2171  balanceOf[from].sub */\n      tag_65\n      swap1\n        /* \"contracts/FOTOM.sol\":2152:2178  balanceOf[from].sub(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_80:\n        /* \"contracts/FOTOM.sol\":2134:2143  balanceOf */\n      0x01\n        /* \"contracts/FOTOM.sol\":2134:2149  balanceOf[from] */\n      0x00\n        /* \"contracts/FOTOM.sol\":2144:2148  from */\n      dup6\n        /* \"contracts/FOTOM.sol\":2134:2149  balanceOf[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/FOTOM.sol\":2134:2178  balanceOf[from] = balanceOf[from].sub(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/FOTOM.sol\":2205:2229  balanceOf[to].add(value) */\n      tag_81\n        /* \"contracts/FOTOM.sol\":2223:2228  value */\n      dup2\n        /* \"contracts/FOTOM.sol\":2205:2214  balanceOf */\n      0x01\n        /* \"contracts/FOTOM.sol\":2205:2218  balanceOf[to] */\n      0x00\n        /* \"contracts/FOTOM.sol\":2215:2217  to */\n      dup6\n        /* \"contracts/FOTOM.sol\":2205:2218  balanceOf[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/FOTOM.sol\":2205:2222  balanceOf[to].add */\n      tag_82\n      swap1\n        /* \"contracts/FOTOM.sol\":2205:2229  balanceOf[to].add(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_81:\n        /* \"contracts/FOTOM.sol\":2189:2198  balanceOf */\n      0x01\n        /* \"contracts/FOTOM.sol\":2189:2202  balanceOf[to] */\n      0x00\n        /* \"contracts/FOTOM.sol\":2199:2201  to */\n      dup5\n        /* \"contracts/FOTOM.sol\":2189:2202  balanceOf[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/FOTOM.sol\":2189:2229  balanceOf[to] = balanceOf[to].add(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/FOTOM.sol\":2260:2262  to */\n      dup2\n        /* \"contracts/FOTOM.sol\":2245:2270  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/FOTOM.sol\":2254:2258  from */\n      dup4\n        /* \"contracts/FOTOM.sol\":2245:2270  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/FOTOM.sol\":2264:2269  value */\n      dup4\n        /* \"contracts/FOTOM.sol\":2245:2270  Transfer(from, to, value) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/FOTOM.sol\":2058:2278  function _transfer(address from, address to, uint value) private {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/libraries/SafeMath.sol\":194:322  function add(uint x, uint y) internal pure returns (uint z) {\r... */\n    tag_82:\n        /* \"contracts/libraries/SafeMath.sol\":246:252  uint z */\n      0x00\n        /* \"contracts/libraries/SafeMath.sol\":288:289  x */\n      dup3\n        /* \"contracts/libraries/SafeMath.sol\":282:283  y */\n      dup3\n        /* \"contracts/libraries/SafeMath.sol\":278:279  x */\n      dup5\n        /* \"contracts/libraries/SafeMath.sol\":278:283  x + y */\n      add\n        /* \"contracts/libraries/SafeMath.sol\":274:283  z = x + y */\n      swap2\n      pop\n      dup2\n        /* \"contracts/libraries/SafeMath.sol\":273:289  (z = x + y) >= x */\n      lt\n      iszero\n        /* \"contracts/libraries/SafeMath.sol\":265:314  require((z = x + y) >= x, 'ds-math-add-overflow') */\n      tag_84\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x14\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x64732d6d6174682d6164642d6f766572666c6f77000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_84:\n        /* \"contracts/libraries/SafeMath.sol\":194:322  function add(uint x, uint y) internal pure returns (uint z) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa265627a7a723158204f69fb312be27678775fac07c732f848b7ade15b2e41eefe0885814aa8b09d4764736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506000469050604051808061109060529139605201905060405180910390206040518060400160405280600a81526020017f556e697377617020563200000000000000000000000000000000000000000000815250805190602001206040518060400160405280600181526020017f3100000000000000000000000000000000000000000000000000000000000000815250805190602001208330604051602001808681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001955050505050506040516020818303038152906040528051906020012060038190555050610f618061012f6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80633644e5151161008c57806395d89b411161006657806395d89b4114610371578063a9059cbb146103f4578063d505accf1461045a578063dd62ed3e146104f3576100cf565b80633644e515146102a357806370a08231146102c15780637ecebe0014610319576100cf565b806306fdde03146100d4578063095ea7b31461015757806318160ddd146101bd57806323b872dd146101db57806330adf81f14610261578063313ce5671461027f575b600080fd5b6100dc61056b565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561011c578082015181840152602081019050610101565b50505050905090810190601f1680156101495780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101a36004803603604081101561016d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105a4565b604051808215151515815260200191505060405180910390f35b6101c56105bb565b6040518082815260200191505060405180910390f35b610247600480360360608110156101f157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105c1565b604051808215151515815260200191505060405180910390f35b61026961078c565b6040518082815260200191505060405180910390f35b6102876107b3565b604051808260ff1660ff16815260200191505060405180910390f35b6102ab6107b8565b6040518082815260200191505060405180910390f35b610303600480360360208110156102d757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107be565b6040518082815260200191505060405180910390f35b61035b6004803603602081101561032f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107d6565b6040518082815260200191505060405180910390f35b6103796107ee565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103b957808201518184015260208101905061039e565b50505050905090810190601f1680156103e65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6104406004803603604081101561040a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610827565b604051808215151515815260200191505060405180910390f35b6104f1600480360360e081101561047057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803560ff169060200190929190803590602001909291908035906020019092919050505061083e565b005b6105556004803603604081101561050957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b82565b6040518082815260200191505060405180910390f35b6040518060400160405280600a81526020017f556e69737761702056320000000000000000000000000000000000000000000081525081565b60006105b1338484610ba7565b6001905092915050565b60005481565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610776576106f582600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610c9290919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b610781848484610d15565b600190509392505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b81565b601281565b60035481565b60016020528060005260406000206000915090505481565b60046020528060005260406000206000915090505481565b6040518060400160405280600681526020017f554e492d5632000000000000000000000000000000000000000000000000000081525081565b6000610834338484610d15565b6001905092915050565b428410156108b4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f46537761703a204558504952454400000000000000000000000000000000000081525060200191505060405180910390fd5b60006003547f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b898989600460008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050558a604051602001808781526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200182815260200196505050505050506040516020818303038152906040528051906020012060405160200180807f190100000000000000000000000000000000000000000000000000000000000081525060020183815260200182815260200192505050604051602081830303815290604052805190602001209050600060018286868660405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015610a86573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614158015610afa57508873ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b610b6c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f46537761703a20494e56414c49445f5349474e4154555245000000000000000081525060200191505060405180910390fd5b610b77898989610ba7565b505050505050505050565b6002602052816000526040600020602052806000526040600020600091509150505481565b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b6000828284039150811115610d0f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f64732d6d6174682d7375622d756e646572666c6f77000000000000000000000081525060200191505060405180910390fd5b92915050565b610d6781600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610c9290919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610dfc81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610ea990919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000828284019150811015610f26576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f64732d6d6174682d6164642d6f766572666c6f7700000000000000000000000081525060200191505060405180910390fd5b9291505056fea265627a7a723158204f69fb312be27678775fac07c732f848b7ade15b2e41eefe0885814aa8b09d4764736f6c63430005100032454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 CHAINID SWAP1 POP PUSH1 0x40 MLOAD DUP1 DUP1 PUSH2 0x1090 PUSH1 0x52 SWAP2 CODECOPY PUSH1 0x52 ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x556E697377617020563200000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP4 ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP PUSH2 0xF61 DUP1 PUSH2 0x12F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3644E515 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x371 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3F4 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x45A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4F3 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x3644E515 EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x319 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x27F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC PUSH2 0x56B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x11C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x101 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x149 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x16D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C5 PUSH2 0x5BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x247 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x269 PUSH2 0x78C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x287 PUSH2 0x7B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AB PUSH2 0x7B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x303 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x7BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x32F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x7D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x379 PUSH2 0x7EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3B9 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x39E JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x3E6 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x440 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x40A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x827 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x470 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x83E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x555 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x509 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xB82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x556E697377617020563200000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B1 CALLER DUP5 DUP5 PUSH2 0xBA7 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x776 JUMPI PUSH2 0x6F5 DUP3 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xC92 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x781 DUP5 DUP5 DUP5 PUSH2 0xD15 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 PUSH1 0x0 SHL DUP2 JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x554E492D56320000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x834 CALLER DUP5 DUP5 PUSH2 0xD15 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST TIMESTAMP DUP5 LT ISZERO PUSH2 0x8B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x46537761703A2045585049524544000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 PUSH1 0x0 SHL DUP10 DUP10 DUP10 PUSH1 0x4 PUSH1 0x0 DUP15 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE DUP11 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x2 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA86 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0xAFA JUMPI POP DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0xB6C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x46537761703A20494E56414C49445F5349474E41545552450000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB77 DUP10 DUP10 DUP10 PUSH2 0xBA7 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 DUP5 SUB SWAP2 POP DUP2 GT ISZERO PUSH2 0xD0F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D6D6174682D7375622D756E646572666C6F770000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD67 DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xC92 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xDFC DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xEA9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 DUP5 ADD SWAP2 POP DUP2 LT ISZERO PUSH2 0xF26 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D6D6174682D6164642D6F766572666C6F77000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0x4F PUSH10 0xFB312BE27678775FAC07 0xC7 ORIGIN 0xF8 0x48 0xB7 0xAD 0xE1 JUMPDEST 0x2E COINBASE 0xEE INVALID ADDMOD DUP6 DUP2 0x4A 0xA8 0xB0 SWAP14 SELFBALANCE PUSH5 0x736F6C6343 STOP SDIV LT STOP ORIGIN GASLIMIT 0x49 POP CALLDATACOPY BALANCE ORIGIN DIFFICULTY PUSH16 0x6D61696E28737472696E67206E616D65 0x2C PUSH20 0x7472696E672076657273696F6E2C75696E743235 CALLDATASIZE KECCAK256 PUSH4 0x6861696E 0x49 PUSH5 0x2C61646472 PUSH6 0x737320766572 PUSH10 0x6679696E67436F6E7472 PUSH2 0x6374 0x29 ",
							"sourceMap": "135:3426:0:-;;;989:458;8:9:-1;5:2;;;30:1;27;20:12;5:2;989:458:0;1021:12;1079:7;1068:18;;1179:95;;;;;;;;;;;;;;;;;;;1309:4;;;;;;;;;;;;;;;;;1293:22;;;;;;1344:10;;;;;;;;;;;;;;;;;1334:21;;;;;;1374:7;1408:4;1150:278;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1150:278:0;;;1126:313;;;;;;1107:16;:332;;;;989:458;135:3426;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100cf5760003560e01c80633644e5151161008c57806395d89b411161006657806395d89b4114610371578063a9059cbb146103f4578063d505accf1461045a578063dd62ed3e146104f3576100cf565b80633644e515146102a357806370a08231146102c15780637ecebe0014610319576100cf565b806306fdde03146100d4578063095ea7b31461015757806318160ddd146101bd57806323b872dd146101db57806330adf81f14610261578063313ce5671461027f575b600080fd5b6100dc61056b565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561011c578082015181840152602081019050610101565b50505050905090810190601f1680156101495780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101a36004803603604081101561016d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105a4565b604051808215151515815260200191505060405180910390f35b6101c56105bb565b6040518082815260200191505060405180910390f35b610247600480360360608110156101f157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105c1565b604051808215151515815260200191505060405180910390f35b61026961078c565b6040518082815260200191505060405180910390f35b6102876107b3565b604051808260ff1660ff16815260200191505060405180910390f35b6102ab6107b8565b6040518082815260200191505060405180910390f35b610303600480360360208110156102d757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107be565b6040518082815260200191505060405180910390f35b61035b6004803603602081101561032f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107d6565b6040518082815260200191505060405180910390f35b6103796107ee565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103b957808201518184015260208101905061039e565b50505050905090810190601f1680156103e65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6104406004803603604081101561040a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610827565b604051808215151515815260200191505060405180910390f35b6104f1600480360360e081101561047057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803560ff169060200190929190803590602001909291908035906020019092919050505061083e565b005b6105556004803603604081101561050957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b82565b6040518082815260200191505060405180910390f35b6040518060400160405280600a81526020017f556e69737761702056320000000000000000000000000000000000000000000081525081565b60006105b1338484610ba7565b6001905092915050565b60005481565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610776576106f582600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610c9290919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b610781848484610d15565b600190509392505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b81565b601281565b60035481565b60016020528060005260406000206000915090505481565b60046020528060005260406000206000915090505481565b6040518060400160405280600681526020017f554e492d5632000000000000000000000000000000000000000000000000000081525081565b6000610834338484610d15565b6001905092915050565b428410156108b4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f46537761703a204558504952454400000000000000000000000000000000000081525060200191505060405180910390fd5b60006003547f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b898989600460008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050558a604051602001808781526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200182815260200196505050505050506040516020818303038152906040528051906020012060405160200180807f190100000000000000000000000000000000000000000000000000000000000081525060020183815260200182815260200192505050604051602081830303815290604052805190602001209050600060018286868660405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015610a86573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614158015610afa57508873ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b610b6c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f46537761703a20494e56414c49445f5349474e4154555245000000000000000081525060200191505060405180910390fd5b610b77898989610ba7565b505050505050505050565b6002602052816000526040600020602052806000526040600020600091509150505481565b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b6000828284039150811115610d0f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f64732d6d6174682d7375622d756e646572666c6f77000000000000000000000081525060200191505060405180910390fd5b92915050565b610d6781600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610c9290919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610dfc81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610ea990919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000828284019150811015610f26576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f64732d6d6174682d6164642d6f766572666c6f7700000000000000000000000081525060200191505060405180910390fd5b9291505056fea265627a7a723158204f69fb312be27678775fac07c732f848b7ade15b2e41eefe0885814aa8b09d4764736f6c63430005100032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3644E515 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x371 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3F4 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x45A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4F3 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x3644E515 EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x319 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x27F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC PUSH2 0x56B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x11C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x101 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x149 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x16D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C5 PUSH2 0x5BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x247 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x269 PUSH2 0x78C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x287 PUSH2 0x7B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AB PUSH2 0x7B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x303 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x7BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x32F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x7D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x379 PUSH2 0x7EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3B9 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x39E JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x3E6 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x440 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x40A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x827 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x470 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x83E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x555 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x509 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xB82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x556E697377617020563200000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B1 CALLER DUP5 DUP5 PUSH2 0xBA7 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x776 JUMPI PUSH2 0x6F5 DUP3 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xC92 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x781 DUP5 DUP5 DUP5 PUSH2 0xD15 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 PUSH1 0x0 SHL DUP2 JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x554E492D56320000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x834 CALLER DUP5 DUP5 PUSH2 0xD15 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST TIMESTAMP DUP5 LT ISZERO PUSH2 0x8B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x46537761703A2045585049524544000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 PUSH1 0x0 SHL DUP10 DUP10 DUP10 PUSH1 0x4 PUSH1 0x0 DUP15 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE DUP11 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x2 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA86 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0xAFA JUMPI POP DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0xB6C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x46537761703A20494E56414C49445F5349474E41545552450000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB77 DUP10 DUP10 DUP10 PUSH2 0xBA7 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 DUP5 SUB SWAP2 POP DUP2 GT ISZERO PUSH2 0xD0F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D6D6174682D7375622D756E646572666C6F770000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD67 DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xC92 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xDFC DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xEA9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 DUP5 ADD SWAP2 POP DUP2 LT ISZERO PUSH2 0xF26 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D6D6174682D6164642D6F766572666C6F77000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0x4F PUSH10 0xFB312BE27678775FAC07 0xC7 ORIGIN 0xF8 0x48 0xB7 0xAD 0xE1 JUMPDEST 0x2E COINBASE 0xEE INVALID ADDMOD DUP6 DUP2 0x4A 0xA8 0xB0 SWAP14 SELFBALANCE PUSH5 0x736F6C6343 STOP SDIV LT STOP ORIGIN ",
							"sourceMap": "135:3426:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;135:3426:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;235:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;235:42:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2286:147;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2286:147:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;373:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2588:296;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2588:296:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;665:108;;;:::i;:::-;;;;;;;;;;;;;;;;;;;331:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;522:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;404:41;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;404:41:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;780:38;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;780:38:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;284:40;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;284:40:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2441:139;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2441:139:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2892:666;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;2892:666:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;452:61;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;452:61:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;235:42;;;;;;;;;;;;;;;;;;;:::o;2286:147::-;2350:4;2367:36;2376:10;2388:7;2397:5;2367:8;:36::i;:::-;2421:4;2414:11;;2286:147;;;;:::o;373:24::-;;;;:::o;2588:296::-;2666:4;220:8;2687:9;:15;2697:4;2687:15;;;;;;;;;;;;;;;:27;2703:10;2687:27;;;;;;;;;;;;;;;;:34;2683:135;;2768:38;2800:5;2768:9;:15;2778:4;2768:15;;;;;;;;;;;;;;;:27;2784:10;2768:27;;;;;;;;;;;;;;;;:31;;:38;;;;:::i;:::-;2738:9;:15;2748:4;2738:15;;;;;;;;;;;;;;;:27;2754:10;2738:27;;;;;;;;;;;;;;;:68;;;;2683:135;2828:26;2838:4;2844:2;2848:5;2828:9;:26::i;:::-;2872:4;2865:11;;2588:296;;;;;:::o;665:108::-;707:66;665:108;;;:::o;331:35::-;364:2;331:35;:::o;522:31::-;;;;:::o;404:41::-;;;;;;;;;;;;;;;;;:::o;780:38::-;;;;;;;;;;;;;;;;;:::o;284:40::-;;;;;;;;;;;;;;;;;;;:::o;2441:139::-;2501:4;2518:32;2528:10;2540:2;2544:5;2518:9;:32::i;:::-;2568:4;2561:11;;2441:139;;;;:::o;2892:666::-;3038:15;3026:8;:27;;3018:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3083:14;3188:16;;707:66;3244:15;;3261:5;3268:7;3277:5;3284:6;:13;3291:5;3284:13;;;;;;;;;;;;;;;;:15;;;;;;;;;;;;3301:8;3233:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3233:77:0;;;3223:88;;;;;;3124:202;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3124:202:0;;;3100:237;;;;;;3083:254;;3348:24;3375:26;3385:6;3393:1;3396;3399;3375:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3375:26:0;;;;;;;;3348:53;;3448:1;3420:30;;:16;:30;;;;:59;;;;;3474:5;3454:25;;:16;:25;;;3420:59;3412:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3519:31;3528:5;3535:7;3544:5;3519:8;:31::i;:::-;2892:666;;;;;;;;;:::o;452:61::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1881:169::-;1990:5;1962:9;:16;1972:5;1962:16;;;;;;;;;;;;;;;:25;1979:7;1962:25;;;;;;;;;;;;;;;:33;;;;2027:7;2011:31;;2020:5;2011:31;;;2036:5;2011:31;;;;;;;;;;;;;;;;;;1881:169;;;:::o;330:129:2:-;382:6;424:1;418;414;:5;410:9;;;409:16;;401:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;330:129;;;;:::o;2058:220:0:-;2152:26;2172:5;2152:9;:15;2162:4;2152:15;;;;;;;;;;;;;;;;:19;;:26;;;;:::i;:::-;2134:9;:15;2144:4;2134:15;;;;;;;;;;;;;;;:44;;;;2205:24;2223:5;2205:9;:13;2215:2;2205:13;;;;;;;;;;;;;;;;:17;;:24;;;;:::i;:::-;2189:9;:13;2199:2;2189:13;;;;;;;;;;;;;;;:40;;;;2260:2;2245:25;;2254:4;2245:25;;;2264:5;2245:25;;;;;;;;;;;;;;;;;;2058:220;;;:::o;194:128:2:-;246:6;288:1;282;278;:5;274:9;;;273:16;;265:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;194:128;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "787400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DOMAIN_SEPARATOR()": "1028",
								"PERMIT_TYPEHASH()": "300",
								"allowance(address,address)": "1355",
								"approve(address,uint256)": "22431",
								"balanceOf(address)": "1214",
								"decimals()": "328",
								"name()": "infinite",
								"nonces(address)": "1236",
								"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1050",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 135,
									"end": 3561,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 135,
									"end": 3561,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 135,
									"end": 3561,
									"name": "MSTORE"
								},
								{
									"begin": 989,
									"end": 1447,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 989,
									"end": 1447,
									"name": "POP"
								},
								{
									"begin": 1021,
									"end": 1033,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1079,
									"end": 1086,
									"name": "CHAINID"
								},
								{
									"begin": 1068,
									"end": 1086,
									"name": "SWAP1"
								},
								{
									"begin": 1068,
									"end": 1086,
									"name": "POP"
								},
								{
									"begin": 1179,
									"end": 1274,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1179,
									"end": 1274,
									"name": "MLOAD"
								},
								{
									"begin": 1179,
									"end": 1274,
									"name": "DUP1"
								},
								{
									"begin": 1179,
									"end": 1274,
									"name": "DUP1"
								},
								{
									"begin": 1179,
									"end": 1274,
									"name": "PUSH data",
									"value": "8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
								},
								{
									"begin": 1179,
									"end": 1274,
									"name": "PUSH",
									"value": "52"
								},
								{
									"begin": 1179,
									"end": 1274,
									"name": "SWAP2"
								},
								{
									"begin": 1179,
									"end": 1274,
									"name": "CODECOPY"
								},
								{
									"begin": 1179,
									"end": 1274,
									"name": "PUSH",
									"value": "52"
								},
								{
									"begin": 1179,
									"end": 1274,
									"name": "ADD"
								},
								{
									"begin": 1179,
									"end": 1274,
									"name": "SWAP1"
								},
								{
									"begin": 1179,
									"end": 1274,
									"name": "POP"
								},
								{
									"begin": 1179,
									"end": 1274,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1179,
									"end": 1274,
									"name": "MLOAD"
								},
								{
									"begin": 1179,
									"end": 1274,
									"name": "DUP1"
								},
								{
									"begin": 1179,
									"end": 1274,
									"name": "SWAP2"
								},
								{
									"begin": 1179,
									"end": 1274,
									"name": "SUB"
								},
								{
									"begin": 1179,
									"end": 1274,
									"name": "SWAP1"
								},
								{
									"begin": 1179,
									"end": 1274,
									"name": "KECCAK256"
								},
								{
									"begin": 1309,
									"end": 1313,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1309,
									"end": 1313,
									"name": "MLOAD"
								},
								{
									"begin": 1309,
									"end": 1313,
									"name": "DUP1"
								},
								{
									"begin": 1309,
									"end": 1313,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1309,
									"end": 1313,
									"name": "ADD"
								},
								{
									"begin": 1309,
									"end": 1313,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1309,
									"end": 1313,
									"name": "MSTORE"
								},
								{
									"begin": 1309,
									"end": 1313,
									"name": "DUP1"
								},
								{
									"begin": 1309,
									"end": 1313,
									"name": "PUSH",
									"value": "A"
								},
								{
									"begin": 1309,
									"end": 1313,
									"name": "DUP2"
								},
								{
									"begin": 1309,
									"end": 1313,
									"name": "MSTORE"
								},
								{
									"begin": 1309,
									"end": 1313,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1309,
									"end": 1313,
									"name": "ADD"
								},
								{
									"begin": 1309,
									"end": 1313,
									"name": "PUSH",
									"value": "556E697377617020563200000000000000000000000000000000000000000000"
								},
								{
									"begin": 1309,
									"end": 1313,
									"name": "DUP2"
								},
								{
									"begin": 1309,
									"end": 1313,
									"name": "MSTORE"
								},
								{
									"begin": 1309,
									"end": 1313,
									"name": "POP"
								},
								{
									"begin": 1293,
									"end": 1315,
									"name": "DUP1"
								},
								{
									"begin": 1293,
									"end": 1315,
									"name": "MLOAD"
								},
								{
									"begin": 1293,
									"end": 1315,
									"name": "SWAP1"
								},
								{
									"begin": 1293,
									"end": 1315,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1293,
									"end": 1315,
									"name": "ADD"
								},
								{
									"begin": 1293,
									"end": 1315,
									"name": "KECCAK256"
								},
								{
									"begin": 1344,
									"end": 1354,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1344,
									"end": 1354,
									"name": "MLOAD"
								},
								{
									"begin": 1344,
									"end": 1354,
									"name": "DUP1"
								},
								{
									"begin": 1344,
									"end": 1354,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1344,
									"end": 1354,
									"name": "ADD"
								},
								{
									"begin": 1344,
									"end": 1354,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1344,
									"end": 1354,
									"name": "MSTORE"
								},
								{
									"begin": 1344,
									"end": 1354,
									"name": "DUP1"
								},
								{
									"begin": 1344,
									"end": 1354,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 1344,
									"end": 1354,
									"name": "DUP2"
								},
								{
									"begin": 1344,
									"end": 1354,
									"name": "MSTORE"
								},
								{
									"begin": 1344,
									"end": 1354,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1344,
									"end": 1354,
									"name": "ADD"
								},
								{
									"begin": 1344,
									"end": 1354,
									"name": "PUSH",
									"value": "3100000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1344,
									"end": 1354,
									"name": "DUP2"
								},
								{
									"begin": 1344,
									"end": 1354,
									"name": "MSTORE"
								},
								{
									"begin": 1344,
									"end": 1354,
									"name": "POP"
								},
								{
									"begin": 1334,
									"end": 1355,
									"name": "DUP1"
								},
								{
									"begin": 1334,
									"end": 1355,
									"name": "MLOAD"
								},
								{
									"begin": 1334,
									"end": 1355,
									"name": "SWAP1"
								},
								{
									"begin": 1334,
									"end": 1355,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1334,
									"end": 1355,
									"name": "ADD"
								},
								{
									"begin": 1334,
									"end": 1355,
									"name": "KECCAK256"
								},
								{
									"begin": 1374,
									"end": 1381,
									"name": "DUP4"
								},
								{
									"begin": 1408,
									"end": 1412,
									"name": "ADDRESS"
								},
								{
									"begin": 1150,
									"end": 1428,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1150,
									"end": 1428,
									"name": "MLOAD"
								},
								{
									"begin": 1150,
									"end": 1428,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1150,
									"end": 1428,
									"name": "ADD"
								},
								{
									"begin": 1150,
									"end": 1428,
									"name": "DUP1"
								},
								{
									"begin": 1150,
									"end": 1428,
									"name": "DUP7"
								},
								{
									"begin": 1150,
									"end": 1428,
									"name": "DUP2"
								},
								{
									"begin": 1150,
									"end": 1428,
									"name": "MSTORE"
								},
								{
									"begin": 1150,
									"end": 1428,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1150,
									"end": 1428,
									"name": "ADD"
								},
								{
									"begin": 1150,
									"end": 1428,
									"name": "DUP6"
								},
								{
									"begin": 1150,
									"end": 1428,
									"name": "DUP2"
								},
								{
									"begin": 1150,
									"end": 1428,
									"name": "MSTORE"
								},
								{
									"begin": 1150,
									"end": 1428,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1150,
									"end": 1428,
									"name": "ADD"
								},
								{
									"begin": 1150,
									"end": 1428,
									"name": "DUP5"
								},
								{
									"begin": 1150,
									"end": 1428,
									"name": "DUP2"
								},
								{
									"begin": 1150,
									"end": 1428,
									"name": "MSTORE"
								},
								{
									"begin": 1150,
									"end": 1428,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1150,
									"end": 1428,
									"name": "ADD"
								},
								{
									"begin": 1150,
									"end": 1428,
									"name": "DUP4"
								},
								{
									"begin": 1150,
									"end": 1428,
									"name": "DUP2"
								},
								{
									"begin": 1150,
									"end": 1428,
									"name": "MSTORE"
								},
								{
									"begin": 1150,
									"end": 1428,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1150,
									"end": 1428,
									"name": "ADD"
								},
								{
									"begin": 1150,
									"end": 1428,
									"name": "DUP3"
								},
								{
									"begin": 1150,
									"end": 1428,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1150,
									"end": 1428,
									"name": "AND"
								},
								{
									"begin": 1150,
									"end": 1428,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1150,
									"end": 1428,
									"name": "AND"
								},
								{
									"begin": 1150,
									"end": 1428,
									"name": "DUP2"
								},
								{
									"begin": 1150,
									"end": 1428,
									"name": "MSTORE"
								},
								{
									"begin": 1150,
									"end": 1428,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1150,
									"end": 1428,
									"name": "ADD"
								},
								{
									"begin": 1150,
									"end": 1428,
									"name": "SWAP6"
								},
								{
									"begin": 1150,
									"end": 1428,
									"name": "POP"
								},
								{
									"begin": 1150,
									"end": 1428,
									"name": "POP"
								},
								{
									"begin": 1150,
									"end": 1428,
									"name": "POP"
								},
								{
									"begin": 1150,
									"end": 1428,
									"name": "POP"
								},
								{
									"begin": 1150,
									"end": 1428,
									"name": "POP"
								},
								{
									"begin": 1150,
									"end": 1428,
									"name": "POP"
								},
								{
									"begin": 1150,
									"end": 1428,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1150,
									"end": 1428,
									"name": "MLOAD"
								},
								{
									"begin": 49,
									"end": 53,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 39,
									"end": 46,
									"name": "DUP2"
								},
								{
									"begin": 30,
									"end": 37,
									"name": "DUP4"
								},
								{
									"begin": 26,
									"end": 47,
									"name": "SUB"
								},
								{
									"begin": 22,
									"end": 54,
									"name": "SUB"
								},
								{
									"begin": 13,
									"end": 20,
									"name": "DUP2"
								},
								{
									"begin": 6,
									"end": 55,
									"name": "MSTORE"
								},
								{
									"begin": 1150,
									"end": 1428,
									"name": "SWAP1"
								},
								{
									"begin": 1150,
									"end": 1428,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1150,
									"end": 1428,
									"name": "MSTORE"
								},
								{
									"begin": 1126,
									"end": 1439,
									"name": "DUP1"
								},
								{
									"begin": 1126,
									"end": 1439,
									"name": "MLOAD"
								},
								{
									"begin": 1126,
									"end": 1439,
									"name": "SWAP1"
								},
								{
									"begin": 1126,
									"end": 1439,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1126,
									"end": 1439,
									"name": "ADD"
								},
								{
									"begin": 1126,
									"end": 1439,
									"name": "KECCAK256"
								},
								{
									"begin": 1107,
									"end": 1123,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 1107,
									"end": 1439,
									"name": "DUP2"
								},
								{
									"begin": 1107,
									"end": 1439,
									"name": "SWAP1"
								},
								{
									"begin": 1107,
									"end": 1439,
									"name": "SSTORE"
								},
								{
									"begin": 1107,
									"end": 1439,
									"name": "POP"
								},
								{
									"begin": 989,
									"end": 1447,
									"name": "POP"
								},
								{
									"begin": 135,
									"end": 3561,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 135,
									"end": 3561,
									"name": "DUP1"
								},
								{
									"begin": 135,
									"end": 3561,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 135,
									"end": 3561,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 135,
									"end": 3561,
									"name": "CODECOPY"
								},
								{
									"begin": 135,
									"end": 3561,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 135,
									"end": 3561,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a723158204f69fb312be27678775fac07c732f848b7ade15b2e41eefe0885814aa8b09d4764736f6c63430005100032",
									".code": [
										{
											"begin": 135,
											"end": 3561,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "MSTORE"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "POP"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "LT"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "JUMPI"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "SHR"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "DUP1"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "PUSH",
											"value": "3644E515"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "GT"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "JUMPI"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "DUP1"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "GT"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "JUMPI"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "DUP1"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "EQ"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "JUMPI"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "DUP1"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "EQ"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "JUMPI"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "DUP1"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "PUSH",
											"value": "D505ACCF"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "EQ"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "JUMPI"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "DUP1"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "EQ"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "JUMPI"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "JUMP"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "JUMPDEST"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "DUP1"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "PUSH",
											"value": "3644E515"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "EQ"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "JUMPI"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "DUP1"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "EQ"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "JUMPI"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "DUP1"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "PUSH",
											"value": "7ECEBE00"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "EQ"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "JUMPI"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "JUMP"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "JUMPDEST"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "DUP1"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "PUSH",
											"value": "6FDDE03"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "EQ"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "JUMPI"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "DUP1"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "EQ"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "JUMPI"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "DUP1"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "EQ"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "JUMPI"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "DUP1"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "EQ"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "JUMPI"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "DUP1"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "PUSH",
											"value": "30ADF81F"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "EQ"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "JUMPI"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "DUP1"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "EQ"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "JUMPI"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "JUMPDEST"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "DUP1"
										},
										{
											"begin": 135,
											"end": 3561,
											"name": "REVERT"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "JUMPDEST"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "JUMPDEST"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "MLOAD"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "DUP1"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "DUP1"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "ADD"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "DUP3"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "DUP2"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "SUB"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "DUP3"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "MSTORE"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "DUP4"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "DUP2"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "DUP2"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "MLOAD"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "DUP2"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "MSTORE"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "ADD"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "SWAP2"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "POP"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "DUP1"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "MLOAD"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "SWAP1"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "ADD"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "SWAP1"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "DUP1"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "DUP4"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "POP"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "POP"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "POP"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "SWAP1"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "POP"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "SWAP1"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "DUP2"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "ADD"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "SWAP1"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "AND"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "DUP1"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "ISZERO"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "JUMPI"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "DUP1"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "DUP3"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "SUB"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "DUP1"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "MLOAD"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "DUP4"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "SUB"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "EXP"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "SUB"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "NOT"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "AND"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "DUP2"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "MSTORE"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "ADD"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "SWAP2"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "POP"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "JUMPDEST"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "POP"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "SWAP3"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "POP"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "POP"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "POP"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "MLOAD"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "DUP1"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "SWAP2"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "SUB"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "SWAP1"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "RETURN"
										},
										{
											"begin": 2286,
											"end": 2433,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 2286,
											"end": 2433,
											"name": "JUMPDEST"
										},
										{
											"begin": 2286,
											"end": 2433,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 2286,
											"end": 2433,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2286,
											"end": 2433,
											"name": "DUP1"
										},
										{
											"begin": 2286,
											"end": 2433,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2286,
											"end": 2433,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2286,
											"end": 2433,
											"name": "DUP2"
										},
										{
											"begin": 2286,
											"end": 2433,
											"name": "ADD"
										},
										{
											"begin": 2286,
											"end": 2433,
											"name": "SWAP1"
										},
										{
											"begin": 2286,
											"end": 2433,
											"name": "DUP1"
										},
										{
											"begin": 2286,
											"end": 2433,
											"name": "DUP1"
										},
										{
											"begin": 2286,
											"end": 2433,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2286,
											"end": 2433,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2286,
											"end": 2433,
											"name": "AND"
										},
										{
											"begin": 2286,
											"end": 2433,
											"name": "SWAP1"
										},
										{
											"begin": 2286,
											"end": 2433,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2286,
											"end": 2433,
											"name": "ADD"
										},
										{
											"begin": 2286,
											"end": 2433,
											"name": "SWAP1"
										},
										{
											"begin": 2286,
											"end": 2433,
											"name": "SWAP3"
										},
										{
											"begin": 2286,
											"end": 2433,
											"name": "SWAP2"
										},
										{
											"begin": 2286,
											"end": 2433,
											"name": "SWAP1"
										},
										{
											"begin": 2286,
											"end": 2433,
											"name": "DUP1"
										},
										{
											"begin": 2286,
											"end": 2433,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2286,
											"end": 2433,
											"name": "SWAP1"
										},
										{
											"begin": 2286,
											"end": 2433,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2286,
											"end": 2433,
											"name": "ADD"
										},
										{
											"begin": 2286,
											"end": 2433,
											"name": "SWAP1"
										},
										{
											"begin": 2286,
											"end": 2433,
											"name": "SWAP3"
										},
										{
											"begin": 2286,
											"end": 2433,
											"name": "SWAP2"
										},
										{
											"begin": 2286,
											"end": 2433,
											"name": "SWAP1"
										},
										{
											"begin": 2286,
											"end": 2433,
											"name": "POP"
										},
										{
											"begin": 2286,
											"end": 2433,
											"name": "POP"
										},
										{
											"begin": 2286,
											"end": 2433,
											"name": "POP"
										},
										{
											"begin": 2286,
											"end": 2433,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 2286,
											"end": 2433,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2286,
											"end": 2433,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 2286,
											"end": 2433,
											"name": "JUMPDEST"
										},
										{
											"begin": 2286,
											"end": 2433,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2286,
											"end": 2433,
											"name": "MLOAD"
										},
										{
											"begin": 2286,
											"end": 2433,
											"name": "DUP1"
										},
										{
											"begin": 2286,
											"end": 2433,
											"name": "DUP3"
										},
										{
											"begin": 2286,
											"end": 2433,
											"name": "ISZERO"
										},
										{
											"begin": 2286,
											"end": 2433,
											"name": "ISZERO"
										},
										{
											"begin": 2286,
											"end": 2433,
											"name": "ISZERO"
										},
										{
											"begin": 2286,
											"end": 2433,
											"name": "ISZERO"
										},
										{
											"begin": 2286,
											"end": 2433,
											"name": "DUP2"
										},
										{
											"begin": 2286,
											"end": 2433,
											"name": "MSTORE"
										},
										{
											"begin": 2286,
											"end": 2433,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2286,
											"end": 2433,
											"name": "ADD"
										},
										{
											"begin": 2286,
											"end": 2433,
											"name": "SWAP2"
										},
										{
											"begin": 2286,
											"end": 2433,
											"name": "POP"
										},
										{
											"begin": 2286,
											"end": 2433,
											"name": "POP"
										},
										{
											"begin": 2286,
											"end": 2433,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2286,
											"end": 2433,
											"name": "MLOAD"
										},
										{
											"begin": 2286,
											"end": 2433,
											"name": "DUP1"
										},
										{
											"begin": 2286,
											"end": 2433,
											"name": "SWAP2"
										},
										{
											"begin": 2286,
											"end": 2433,
											"name": "SUB"
										},
										{
											"begin": 2286,
											"end": 2433,
											"name": "SWAP1"
										},
										{
											"begin": 2286,
											"end": 2433,
											"name": "RETURN"
										},
										{
											"begin": 373,
											"end": 397,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 373,
											"end": 397,
											"name": "JUMPDEST"
										},
										{
											"begin": 373,
											"end": 397,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 373,
											"end": 397,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 373,
											"end": 397,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 373,
											"end": 397,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 373,
											"end": 397,
											"name": "JUMPDEST"
										},
										{
											"begin": 373,
											"end": 397,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 373,
											"end": 397,
											"name": "MLOAD"
										},
										{
											"begin": 373,
											"end": 397,
											"name": "DUP1"
										},
										{
											"begin": 373,
											"end": 397,
											"name": "DUP3"
										},
										{
											"begin": 373,
											"end": 397,
											"name": "DUP2"
										},
										{
											"begin": 373,
											"end": 397,
											"name": "MSTORE"
										},
										{
											"begin": 373,
											"end": 397,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 373,
											"end": 397,
											"name": "ADD"
										},
										{
											"begin": 373,
											"end": 397,
											"name": "SWAP2"
										},
										{
											"begin": 373,
											"end": 397,
											"name": "POP"
										},
										{
											"begin": 373,
											"end": 397,
											"name": "POP"
										},
										{
											"begin": 373,
											"end": 397,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 373,
											"end": 397,
											"name": "MLOAD"
										},
										{
											"begin": 373,
											"end": 397,
											"name": "DUP1"
										},
										{
											"begin": 373,
											"end": 397,
											"name": "SWAP2"
										},
										{
											"begin": 373,
											"end": 397,
											"name": "SUB"
										},
										{
											"begin": 373,
											"end": 397,
											"name": "SWAP1"
										},
										{
											"begin": 373,
											"end": 397,
											"name": "RETURN"
										},
										{
											"begin": 2588,
											"end": 2884,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 2588,
											"end": 2884,
											"name": "JUMPDEST"
										},
										{
											"begin": 2588,
											"end": 2884,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 2588,
											"end": 2884,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2588,
											"end": 2884,
											"name": "DUP1"
										},
										{
											"begin": 2588,
											"end": 2884,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2588,
											"end": 2884,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2588,
											"end": 2884,
											"name": "DUP2"
										},
										{
											"begin": 2588,
											"end": 2884,
											"name": "ADD"
										},
										{
											"begin": 2588,
											"end": 2884,
											"name": "SWAP1"
										},
										{
											"begin": 2588,
											"end": 2884,
											"name": "DUP1"
										},
										{
											"begin": 2588,
											"end": 2884,
											"name": "DUP1"
										},
										{
											"begin": 2588,
											"end": 2884,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2588,
											"end": 2884,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2588,
											"end": 2884,
											"name": "AND"
										},
										{
											"begin": 2588,
											"end": 2884,
											"name": "SWAP1"
										},
										{
											"begin": 2588,
											"end": 2884,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2588,
											"end": 2884,
											"name": "ADD"
										},
										{
											"begin": 2588,
											"end": 2884,
											"name": "SWAP1"
										},
										{
											"begin": 2588,
											"end": 2884,
											"name": "SWAP3"
										},
										{
											"begin": 2588,
											"end": 2884,
											"name": "SWAP2"
										},
										{
											"begin": 2588,
											"end": 2884,
											"name": "SWAP1"
										},
										{
											"begin": 2588,
											"end": 2884,
											"name": "DUP1"
										},
										{
											"begin": 2588,
											"end": 2884,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2588,
											"end": 2884,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2588,
											"end": 2884,
											"name": "AND"
										},
										{
											"begin": 2588,
											"end": 2884,
											"name": "SWAP1"
										},
										{
											"begin": 2588,
											"end": 2884,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2588,
											"end": 2884,
											"name": "ADD"
										},
										{
											"begin": 2588,
											"end": 2884,
											"name": "SWAP1"
										},
										{
											"begin": 2588,
											"end": 2884,
											"name": "SWAP3"
										},
										{
											"begin": 2588,
											"end": 2884,
											"name": "SWAP2"
										},
										{
											"begin": 2588,
											"end": 2884,
											"name": "SWAP1"
										},
										{
											"begin": 2588,
											"end": 2884,
											"name": "DUP1"
										},
										{
											"begin": 2588,
											"end": 2884,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2588,
											"end": 2884,
											"name": "SWAP1"
										},
										{
											"begin": 2588,
											"end": 2884,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2588,
											"end": 2884,
											"name": "ADD"
										},
										{
											"begin": 2588,
											"end": 2884,
											"name": "SWAP1"
										},
										{
											"begin": 2588,
											"end": 2884,
											"name": "SWAP3"
										},
										{
											"begin": 2588,
											"end": 2884,
											"name": "SWAP2"
										},
										{
											"begin": 2588,
											"end": 2884,
											"name": "SWAP1"
										},
										{
											"begin": 2588,
											"end": 2884,
											"name": "POP"
										},
										{
											"begin": 2588,
											"end": 2884,
											"name": "POP"
										},
										{
											"begin": 2588,
											"end": 2884,
											"name": "POP"
										},
										{
											"begin": 2588,
											"end": 2884,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 2588,
											"end": 2884,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2588,
											"end": 2884,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 2588,
											"end": 2884,
											"name": "JUMPDEST"
										},
										{
											"begin": 2588,
											"end": 2884,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2588,
											"end": 2884,
											"name": "MLOAD"
										},
										{
											"begin": 2588,
											"end": 2884,
											"name": "DUP1"
										},
										{
											"begin": 2588,
											"end": 2884,
											"name": "DUP3"
										},
										{
											"begin": 2588,
											"end": 2884,
											"name": "ISZERO"
										},
										{
											"begin": 2588,
											"end": 2884,
											"name": "ISZERO"
										},
										{
											"begin": 2588,
											"end": 2884,
											"name": "ISZERO"
										},
										{
											"begin": 2588,
											"end": 2884,
											"name": "ISZERO"
										},
										{
											"begin": 2588,
											"end": 2884,
											"name": "DUP2"
										},
										{
											"begin": 2588,
											"end": 2884,
											"name": "MSTORE"
										},
										{
											"begin": 2588,
											"end": 2884,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2588,
											"end": 2884,
											"name": "ADD"
										},
										{
											"begin": 2588,
											"end": 2884,
											"name": "SWAP2"
										},
										{
											"begin": 2588,
											"end": 2884,
											"name": "POP"
										},
										{
											"begin": 2588,
											"end": 2884,
											"name": "POP"
										},
										{
											"begin": 2588,
											"end": 2884,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2588,
											"end": 2884,
											"name": "MLOAD"
										},
										{
											"begin": 2588,
											"end": 2884,
											"name": "DUP1"
										},
										{
											"begin": 2588,
											"end": 2884,
											"name": "SWAP2"
										},
										{
											"begin": 2588,
											"end": 2884,
											"name": "SUB"
										},
										{
											"begin": 2588,
											"end": 2884,
											"name": "SWAP1"
										},
										{
											"begin": 2588,
											"end": 2884,
											"name": "RETURN"
										},
										{
											"begin": 665,
											"end": 773,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 665,
											"end": 773,
											"name": "JUMPDEST"
										},
										{
											"begin": 665,
											"end": 773,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 665,
											"end": 773,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 665,
											"end": 773,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 665,
											"end": 773,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 665,
											"end": 773,
											"name": "JUMPDEST"
										},
										{
											"begin": 665,
											"end": 773,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 665,
											"end": 773,
											"name": "MLOAD"
										},
										{
											"begin": 665,
											"end": 773,
											"name": "DUP1"
										},
										{
											"begin": 665,
											"end": 773,
											"name": "DUP3"
										},
										{
											"begin": 665,
											"end": 773,
											"name": "DUP2"
										},
										{
											"begin": 665,
											"end": 773,
											"name": "MSTORE"
										},
										{
											"begin": 665,
											"end": 773,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 665,
											"end": 773,
											"name": "ADD"
										},
										{
											"begin": 665,
											"end": 773,
											"name": "SWAP2"
										},
										{
											"begin": 665,
											"end": 773,
											"name": "POP"
										},
										{
											"begin": 665,
											"end": 773,
											"name": "POP"
										},
										{
											"begin": 665,
											"end": 773,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 665,
											"end": 773,
											"name": "MLOAD"
										},
										{
											"begin": 665,
											"end": 773,
											"name": "DUP1"
										},
										{
											"begin": 665,
											"end": 773,
											"name": "SWAP2"
										},
										{
											"begin": 665,
											"end": 773,
											"name": "SUB"
										},
										{
											"begin": 665,
											"end": 773,
											"name": "SWAP1"
										},
										{
											"begin": 665,
											"end": 773,
											"name": "RETURN"
										},
										{
											"begin": 331,
											"end": 366,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 331,
											"end": 366,
											"name": "JUMPDEST"
										},
										{
											"begin": 331,
											"end": 366,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 331,
											"end": 366,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 331,
											"end": 366,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 331,
											"end": 366,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 331,
											"end": 366,
											"name": "JUMPDEST"
										},
										{
											"begin": 331,
											"end": 366,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 331,
											"end": 366,
											"name": "MLOAD"
										},
										{
											"begin": 331,
											"end": 366,
											"name": "DUP1"
										},
										{
											"begin": 331,
											"end": 366,
											"name": "DUP3"
										},
										{
											"begin": 331,
											"end": 366,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 331,
											"end": 366,
											"name": "AND"
										},
										{
											"begin": 331,
											"end": 366,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 331,
											"end": 366,
											"name": "AND"
										},
										{
											"begin": 331,
											"end": 366,
											"name": "DUP2"
										},
										{
											"begin": 331,
											"end": 366,
											"name": "MSTORE"
										},
										{
											"begin": 331,
											"end": 366,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 331,
											"end": 366,
											"name": "ADD"
										},
										{
											"begin": 331,
											"end": 366,
											"name": "SWAP2"
										},
										{
											"begin": 331,
											"end": 366,
											"name": "POP"
										},
										{
											"begin": 331,
											"end": 366,
											"name": "POP"
										},
										{
											"begin": 331,
											"end": 366,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 331,
											"end": 366,
											"name": "MLOAD"
										},
										{
											"begin": 331,
											"end": 366,
											"name": "DUP1"
										},
										{
											"begin": 331,
											"end": 366,
											"name": "SWAP2"
										},
										{
											"begin": 331,
											"end": 366,
											"name": "SUB"
										},
										{
											"begin": 331,
											"end": 366,
											"name": "SWAP1"
										},
										{
											"begin": 331,
											"end": 366,
											"name": "RETURN"
										},
										{
											"begin": 522,
											"end": 553,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 522,
											"end": 553,
											"name": "JUMPDEST"
										},
										{
											"begin": 522,
											"end": 553,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 522,
											"end": 553,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 522,
											"end": 553,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 522,
											"end": 553,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 522,
											"end": 553,
											"name": "JUMPDEST"
										},
										{
											"begin": 522,
											"end": 553,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 522,
											"end": 553,
											"name": "MLOAD"
										},
										{
											"begin": 522,
											"end": 553,
											"name": "DUP1"
										},
										{
											"begin": 522,
											"end": 553,
											"name": "DUP3"
										},
										{
											"begin": 522,
											"end": 553,
											"name": "DUP2"
										},
										{
											"begin": 522,
											"end": 553,
											"name": "MSTORE"
										},
										{
											"begin": 522,
											"end": 553,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 522,
											"end": 553,
											"name": "ADD"
										},
										{
											"begin": 522,
											"end": 553,
											"name": "SWAP2"
										},
										{
											"begin": 522,
											"end": 553,
											"name": "POP"
										},
										{
											"begin": 522,
											"end": 553,
											"name": "POP"
										},
										{
											"begin": 522,
											"end": 553,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 522,
											"end": 553,
											"name": "MLOAD"
										},
										{
											"begin": 522,
											"end": 553,
											"name": "DUP1"
										},
										{
											"begin": 522,
											"end": 553,
											"name": "SWAP2"
										},
										{
											"begin": 522,
											"end": 553,
											"name": "SUB"
										},
										{
											"begin": 522,
											"end": 553,
											"name": "SWAP1"
										},
										{
											"begin": 522,
											"end": 553,
											"name": "RETURN"
										},
										{
											"begin": 404,
											"end": 445,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 404,
											"end": 445,
											"name": "JUMPDEST"
										},
										{
											"begin": 404,
											"end": 445,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 404,
											"end": 445,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 404,
											"end": 445,
											"name": "DUP1"
										},
										{
											"begin": 404,
											"end": 445,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 404,
											"end": 445,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 404,
											"end": 445,
											"name": "DUP2"
										},
										{
											"begin": 404,
											"end": 445,
											"name": "ADD"
										},
										{
											"begin": 404,
											"end": 445,
											"name": "SWAP1"
										},
										{
											"begin": 404,
											"end": 445,
											"name": "DUP1"
										},
										{
											"begin": 404,
											"end": 445,
											"name": "DUP1"
										},
										{
											"begin": 404,
											"end": 445,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 404,
											"end": 445,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 445,
											"name": "AND"
										},
										{
											"begin": 404,
											"end": 445,
											"name": "SWAP1"
										},
										{
											"begin": 404,
											"end": 445,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 404,
											"end": 445,
											"name": "ADD"
										},
										{
											"begin": 404,
											"end": 445,
											"name": "SWAP1"
										},
										{
											"begin": 404,
											"end": 445,
											"name": "SWAP3"
										},
										{
											"begin": 404,
											"end": 445,
											"name": "SWAP2"
										},
										{
											"begin": 404,
											"end": 445,
											"name": "SWAP1"
										},
										{
											"begin": 404,
											"end": 445,
											"name": "POP"
										},
										{
											"begin": 404,
											"end": 445,
											"name": "POP"
										},
										{
											"begin": 404,
											"end": 445,
											"name": "POP"
										},
										{
											"begin": 404,
											"end": 445,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 404,
											"end": 445,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 404,
											"end": 445,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 404,
											"end": 445,
											"name": "JUMPDEST"
										},
										{
											"begin": 404,
											"end": 445,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 404,
											"end": 445,
											"name": "MLOAD"
										},
										{
											"begin": 404,
											"end": 445,
											"name": "DUP1"
										},
										{
											"begin": 404,
											"end": 445,
											"name": "DUP3"
										},
										{
											"begin": 404,
											"end": 445,
											"name": "DUP2"
										},
										{
											"begin": 404,
											"end": 445,
											"name": "MSTORE"
										},
										{
											"begin": 404,
											"end": 445,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 404,
											"end": 445,
											"name": "ADD"
										},
										{
											"begin": 404,
											"end": 445,
											"name": "SWAP2"
										},
										{
											"begin": 404,
											"end": 445,
											"name": "POP"
										},
										{
											"begin": 404,
											"end": 445,
											"name": "POP"
										},
										{
											"begin": 404,
											"end": 445,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 404,
											"end": 445,
											"name": "MLOAD"
										},
										{
											"begin": 404,
											"end": 445,
											"name": "DUP1"
										},
										{
											"begin": 404,
											"end": 445,
											"name": "SWAP2"
										},
										{
											"begin": 404,
											"end": 445,
											"name": "SUB"
										},
										{
											"begin": 404,
											"end": 445,
											"name": "SWAP1"
										},
										{
											"begin": 404,
											"end": 445,
											"name": "RETURN"
										},
										{
											"begin": 780,
											"end": 818,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 780,
											"end": 818,
											"name": "JUMPDEST"
										},
										{
											"begin": 780,
											"end": 818,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 780,
											"end": 818,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 780,
											"end": 818,
											"name": "DUP1"
										},
										{
											"begin": 780,
											"end": 818,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 780,
											"end": 818,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 780,
											"end": 818,
											"name": "DUP2"
										},
										{
											"begin": 780,
											"end": 818,
											"name": "ADD"
										},
										{
											"begin": 780,
											"end": 818,
											"name": "SWAP1"
										},
										{
											"begin": 780,
											"end": 818,
											"name": "DUP1"
										},
										{
											"begin": 780,
											"end": 818,
											"name": "DUP1"
										},
										{
											"begin": 780,
											"end": 818,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 780,
											"end": 818,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 780,
											"end": 818,
											"name": "AND"
										},
										{
											"begin": 780,
											"end": 818,
											"name": "SWAP1"
										},
										{
											"begin": 780,
											"end": 818,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 780,
											"end": 818,
											"name": "ADD"
										},
										{
											"begin": 780,
											"end": 818,
											"name": "SWAP1"
										},
										{
											"begin": 780,
											"end": 818,
											"name": "SWAP3"
										},
										{
											"begin": 780,
											"end": 818,
											"name": "SWAP2"
										},
										{
											"begin": 780,
											"end": 818,
											"name": "SWAP1"
										},
										{
											"begin": 780,
											"end": 818,
											"name": "POP"
										},
										{
											"begin": 780,
											"end": 818,
											"name": "POP"
										},
										{
											"begin": 780,
											"end": 818,
											"name": "POP"
										},
										{
											"begin": 780,
											"end": 818,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 780,
											"end": 818,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 780,
											"end": 818,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 780,
											"end": 818,
											"name": "JUMPDEST"
										},
										{
											"begin": 780,
											"end": 818,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 780,
											"end": 818,
											"name": "MLOAD"
										},
										{
											"begin": 780,
											"end": 818,
											"name": "DUP1"
										},
										{
											"begin": 780,
											"end": 818,
											"name": "DUP3"
										},
										{
											"begin": 780,
											"end": 818,
											"name": "DUP2"
										},
										{
											"begin": 780,
											"end": 818,
											"name": "MSTORE"
										},
										{
											"begin": 780,
											"end": 818,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 780,
											"end": 818,
											"name": "ADD"
										},
										{
											"begin": 780,
											"end": 818,
											"name": "SWAP2"
										},
										{
											"begin": 780,
											"end": 818,
											"name": "POP"
										},
										{
											"begin": 780,
											"end": 818,
											"name": "POP"
										},
										{
											"begin": 780,
											"end": 818,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 780,
											"end": 818,
											"name": "MLOAD"
										},
										{
											"begin": 780,
											"end": 818,
											"name": "DUP1"
										},
										{
											"begin": 780,
											"end": 818,
											"name": "SWAP2"
										},
										{
											"begin": 780,
											"end": 818,
											"name": "SUB"
										},
										{
											"begin": 780,
											"end": 818,
											"name": "SWAP1"
										},
										{
											"begin": 780,
											"end": 818,
											"name": "RETURN"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "JUMPDEST"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "JUMPDEST"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "MLOAD"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "DUP1"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "DUP1"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "ADD"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "DUP3"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "DUP2"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "SUB"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "DUP3"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "MSTORE"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "DUP4"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "DUP2"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "DUP2"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "MLOAD"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "DUP2"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "MSTORE"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "ADD"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "SWAP2"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "POP"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "DUP1"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "MLOAD"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "SWAP1"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "ADD"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "SWAP1"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "DUP1"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "DUP4"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "POP"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "POP"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "POP"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "SWAP1"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "POP"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "SWAP1"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "DUP2"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "ADD"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "SWAP1"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "AND"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "DUP1"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "ISZERO"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "JUMPI"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "DUP1"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "DUP3"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "SUB"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "DUP1"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "MLOAD"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "DUP4"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "SUB"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "EXP"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "SUB"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "NOT"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "AND"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "DUP2"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "MSTORE"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "ADD"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "SWAP2"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "POP"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "JUMPDEST"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "POP"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "SWAP3"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "POP"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "POP"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "POP"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "MLOAD"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "DUP1"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "SWAP2"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "SUB"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "SWAP1"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "RETURN"
										},
										{
											"begin": 2441,
											"end": 2580,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 2441,
											"end": 2580,
											"name": "JUMPDEST"
										},
										{
											"begin": 2441,
											"end": 2580,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 2441,
											"end": 2580,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2441,
											"end": 2580,
											"name": "DUP1"
										},
										{
											"begin": 2441,
											"end": 2580,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2441,
											"end": 2580,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2441,
											"end": 2580,
											"name": "DUP2"
										},
										{
											"begin": 2441,
											"end": 2580,
											"name": "ADD"
										},
										{
											"begin": 2441,
											"end": 2580,
											"name": "SWAP1"
										},
										{
											"begin": 2441,
											"end": 2580,
											"name": "DUP1"
										},
										{
											"begin": 2441,
											"end": 2580,
											"name": "DUP1"
										},
										{
											"begin": 2441,
											"end": 2580,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2441,
											"end": 2580,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2441,
											"end": 2580,
											"name": "AND"
										},
										{
											"begin": 2441,
											"end": 2580,
											"name": "SWAP1"
										},
										{
											"begin": 2441,
											"end": 2580,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2441,
											"end": 2580,
											"name": "ADD"
										},
										{
											"begin": 2441,
											"end": 2580,
											"name": "SWAP1"
										},
										{
											"begin": 2441,
											"end": 2580,
											"name": "SWAP3"
										},
										{
											"begin": 2441,
											"end": 2580,
											"name": "SWAP2"
										},
										{
											"begin": 2441,
											"end": 2580,
											"name": "SWAP1"
										},
										{
											"begin": 2441,
											"end": 2580,
											"name": "DUP1"
										},
										{
											"begin": 2441,
											"end": 2580,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2441,
											"end": 2580,
											"name": "SWAP1"
										},
										{
											"begin": 2441,
											"end": 2580,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2441,
											"end": 2580,
											"name": "ADD"
										},
										{
											"begin": 2441,
											"end": 2580,
											"name": "SWAP1"
										},
										{
											"begin": 2441,
											"end": 2580,
											"name": "SWAP3"
										},
										{
											"begin": 2441,
											"end": 2580,
											"name": "SWAP2"
										},
										{
											"begin": 2441,
											"end": 2580,
											"name": "SWAP1"
										},
										{
											"begin": 2441,
											"end": 2580,
											"name": "POP"
										},
										{
											"begin": 2441,
											"end": 2580,
											"name": "POP"
										},
										{
											"begin": 2441,
											"end": 2580,
											"name": "POP"
										},
										{
											"begin": 2441,
											"end": 2580,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 2441,
											"end": 2580,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2441,
											"end": 2580,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 2441,
											"end": 2580,
											"name": "JUMPDEST"
										},
										{
											"begin": 2441,
											"end": 2580,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2441,
											"end": 2580,
											"name": "MLOAD"
										},
										{
											"begin": 2441,
											"end": 2580,
											"name": "DUP1"
										},
										{
											"begin": 2441,
											"end": 2580,
											"name": "DUP3"
										},
										{
											"begin": 2441,
											"end": 2580,
											"name": "ISZERO"
										},
										{
											"begin": 2441,
											"end": 2580,
											"name": "ISZERO"
										},
										{
											"begin": 2441,
											"end": 2580,
											"name": "ISZERO"
										},
										{
											"begin": 2441,
											"end": 2580,
											"name": "ISZERO"
										},
										{
											"begin": 2441,
											"end": 2580,
											"name": "DUP2"
										},
										{
											"begin": 2441,
											"end": 2580,
											"name": "MSTORE"
										},
										{
											"begin": 2441,
											"end": 2580,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2441,
											"end": 2580,
											"name": "ADD"
										},
										{
											"begin": 2441,
											"end": 2580,
											"name": "SWAP2"
										},
										{
											"begin": 2441,
											"end": 2580,
											"name": "POP"
										},
										{
											"begin": 2441,
											"end": 2580,
											"name": "POP"
										},
										{
											"begin": 2441,
											"end": 2580,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2441,
											"end": 2580,
											"name": "MLOAD"
										},
										{
											"begin": 2441,
											"end": 2580,
											"name": "DUP1"
										},
										{
											"begin": 2441,
											"end": 2580,
											"name": "SWAP2"
										},
										{
											"begin": 2441,
											"end": 2580,
											"name": "SUB"
										},
										{
											"begin": 2441,
											"end": 2580,
											"name": "SWAP1"
										},
										{
											"begin": 2441,
											"end": 2580,
											"name": "RETURN"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "JUMPDEST"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "DUP1"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 16,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 17,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "DUP2"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "ADD"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "SWAP1"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "DUP1"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "DUP1"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "AND"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "SWAP1"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "ADD"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "SWAP1"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "SWAP3"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "SWAP2"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "SWAP1"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "DUP1"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "AND"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "SWAP1"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "ADD"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "SWAP1"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "SWAP3"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "SWAP2"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "SWAP1"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "DUP1"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "SWAP1"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "ADD"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "SWAP1"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "SWAP3"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "SWAP2"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "SWAP1"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "DUP1"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "SWAP1"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "ADD"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "SWAP1"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "SWAP3"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "SWAP2"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "SWAP1"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "DUP1"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "AND"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "SWAP1"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "ADD"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "SWAP1"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "SWAP3"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "SWAP2"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "SWAP1"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "DUP1"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "SWAP1"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "ADD"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "SWAP1"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "SWAP3"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "SWAP2"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "SWAP1"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "DUP1"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "SWAP1"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "ADD"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "SWAP1"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "SWAP3"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "SWAP2"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "SWAP1"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "POP"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "POP"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "POP"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "JUMPDEST"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "STOP"
										},
										{
											"begin": 452,
											"end": 513,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 452,
											"end": 513,
											"name": "JUMPDEST"
										},
										{
											"begin": 452,
											"end": 513,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 452,
											"end": 513,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 452,
											"end": 513,
											"name": "DUP1"
										},
										{
											"begin": 452,
											"end": 513,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 452,
											"end": 513,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 452,
											"end": 513,
											"name": "DUP2"
										},
										{
											"begin": 452,
											"end": 513,
											"name": "ADD"
										},
										{
											"begin": 452,
											"end": 513,
											"name": "SWAP1"
										},
										{
											"begin": 452,
											"end": 513,
											"name": "DUP1"
										},
										{
											"begin": 452,
											"end": 513,
											"name": "DUP1"
										},
										{
											"begin": 452,
											"end": 513,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 452,
											"end": 513,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 452,
											"end": 513,
											"name": "AND"
										},
										{
											"begin": 452,
											"end": 513,
											"name": "SWAP1"
										},
										{
											"begin": 452,
											"end": 513,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 452,
											"end": 513,
											"name": "ADD"
										},
										{
											"begin": 452,
											"end": 513,
											"name": "SWAP1"
										},
										{
											"begin": 452,
											"end": 513,
											"name": "SWAP3"
										},
										{
											"begin": 452,
											"end": 513,
											"name": "SWAP2"
										},
										{
											"begin": 452,
											"end": 513,
											"name": "SWAP1"
										},
										{
											"begin": 452,
											"end": 513,
											"name": "DUP1"
										},
										{
											"begin": 452,
											"end": 513,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 452,
											"end": 513,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 452,
											"end": 513,
											"name": "AND"
										},
										{
											"begin": 452,
											"end": 513,
											"name": "SWAP1"
										},
										{
											"begin": 452,
											"end": 513,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 452,
											"end": 513,
											"name": "ADD"
										},
										{
											"begin": 452,
											"end": 513,
											"name": "SWAP1"
										},
										{
											"begin": 452,
											"end": 513,
											"name": "SWAP3"
										},
										{
											"begin": 452,
											"end": 513,
											"name": "SWAP2"
										},
										{
											"begin": 452,
											"end": 513,
											"name": "SWAP1"
										},
										{
											"begin": 452,
											"end": 513,
											"name": "POP"
										},
										{
											"begin": 452,
											"end": 513,
											"name": "POP"
										},
										{
											"begin": 452,
											"end": 513,
											"name": "POP"
										},
										{
											"begin": 452,
											"end": 513,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 452,
											"end": 513,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 452,
											"end": 513,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 452,
											"end": 513,
											"name": "JUMPDEST"
										},
										{
											"begin": 452,
											"end": 513,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 452,
											"end": 513,
											"name": "MLOAD"
										},
										{
											"begin": 452,
											"end": 513,
											"name": "DUP1"
										},
										{
											"begin": 452,
											"end": 513,
											"name": "DUP3"
										},
										{
											"begin": 452,
											"end": 513,
											"name": "DUP2"
										},
										{
											"begin": 452,
											"end": 513,
											"name": "MSTORE"
										},
										{
											"begin": 452,
											"end": 513,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 452,
											"end": 513,
											"name": "ADD"
										},
										{
											"begin": 452,
											"end": 513,
											"name": "SWAP2"
										},
										{
											"begin": 452,
											"end": 513,
											"name": "POP"
										},
										{
											"begin": 452,
											"end": 513,
											"name": "POP"
										},
										{
											"begin": 452,
											"end": 513,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 452,
											"end": 513,
											"name": "MLOAD"
										},
										{
											"begin": 452,
											"end": 513,
											"name": "DUP1"
										},
										{
											"begin": 452,
											"end": 513,
											"name": "SWAP2"
										},
										{
											"begin": 452,
											"end": 513,
											"name": "SUB"
										},
										{
											"begin": 452,
											"end": 513,
											"name": "SWAP1"
										},
										{
											"begin": 452,
											"end": 513,
											"name": "RETURN"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "JUMPDEST"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "MLOAD"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "DUP1"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "ADD"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "MSTORE"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "DUP1"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "DUP2"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "MSTORE"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "ADD"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "PUSH",
											"value": "556E697377617020563200000000000000000000000000000000000000000000"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "DUP2"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "MSTORE"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "POP"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "DUP2"
										},
										{
											"begin": 235,
											"end": 277,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2286,
											"end": 2433,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 2286,
											"end": 2433,
											"name": "JUMPDEST"
										},
										{
											"begin": 2350,
											"end": 2354,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2367,
											"end": 2403,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 2376,
											"end": 2386,
											"name": "CALLER"
										},
										{
											"begin": 2388,
											"end": 2395,
											"name": "DUP5"
										},
										{
											"begin": 2397,
											"end": 2402,
											"name": "DUP5"
										},
										{
											"begin": 2367,
											"end": 2375,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 2367,
											"end": 2403,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2367,
											"end": 2403,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 2367,
											"end": 2403,
											"name": "JUMPDEST"
										},
										{
											"begin": 2421,
											"end": 2425,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2414,
											"end": 2425,
											"name": "SWAP1"
										},
										{
											"begin": 2414,
											"end": 2425,
											"name": "POP"
										},
										{
											"begin": 2286,
											"end": 2433,
											"name": "SWAP3"
										},
										{
											"begin": 2286,
											"end": 2433,
											"name": "SWAP2"
										},
										{
											"begin": 2286,
											"end": 2433,
											"name": "POP"
										},
										{
											"begin": 2286,
											"end": 2433,
											"name": "POP"
										},
										{
											"begin": 2286,
											"end": 2433,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 373,
											"end": 397,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 373,
											"end": 397,
											"name": "JUMPDEST"
										},
										{
											"begin": 373,
											"end": 397,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 373,
											"end": 397,
											"name": "SLOAD"
										},
										{
											"begin": 373,
											"end": 397,
											"name": "DUP2"
										},
										{
											"begin": 373,
											"end": 397,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2588,
											"end": 2884,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 2588,
											"end": 2884,
											"name": "JUMPDEST"
										},
										{
											"begin": 2666,
											"end": 2670,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 220,
											"end": 228,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2687,
											"end": 2696,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2687,
											"end": 2702,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2697,
											"end": 2701,
											"name": "DUP7"
										},
										{
											"begin": 2687,
											"end": 2702,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2687,
											"end": 2702,
											"name": "AND"
										},
										{
											"begin": 2687,
											"end": 2702,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2687,
											"end": 2702,
											"name": "AND"
										},
										{
											"begin": 2687,
											"end": 2702,
											"name": "DUP2"
										},
										{
											"begin": 2687,
											"end": 2702,
											"name": "MSTORE"
										},
										{
											"begin": 2687,
											"end": 2702,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2687,
											"end": 2702,
											"name": "ADD"
										},
										{
											"begin": 2687,
											"end": 2702,
											"name": "SWAP1"
										},
										{
											"begin": 2687,
											"end": 2702,
											"name": "DUP2"
										},
										{
											"begin": 2687,
											"end": 2702,
											"name": "MSTORE"
										},
										{
											"begin": 2687,
											"end": 2702,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2687,
											"end": 2702,
											"name": "ADD"
										},
										{
											"begin": 2687,
											"end": 2702,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2687,
											"end": 2702,
											"name": "KECCAK256"
										},
										{
											"begin": 2687,
											"end": 2714,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2703,
											"end": 2713,
											"name": "CALLER"
										},
										{
											"begin": 2687,
											"end": 2714,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2687,
											"end": 2714,
											"name": "AND"
										},
										{
											"begin": 2687,
											"end": 2714,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2687,
											"end": 2714,
											"name": "AND"
										},
										{
											"begin": 2687,
											"end": 2714,
											"name": "DUP2"
										},
										{
											"begin": 2687,
											"end": 2714,
											"name": "MSTORE"
										},
										{
											"begin": 2687,
											"end": 2714,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2687,
											"end": 2714,
											"name": "ADD"
										},
										{
											"begin": 2687,
											"end": 2714,
											"name": "SWAP1"
										},
										{
											"begin": 2687,
											"end": 2714,
											"name": "DUP2"
										},
										{
											"begin": 2687,
											"end": 2714,
											"name": "MSTORE"
										},
										{
											"begin": 2687,
											"end": 2714,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2687,
											"end": 2714,
											"name": "ADD"
										},
										{
											"begin": 2687,
											"end": 2714,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2687,
											"end": 2714,
											"name": "KECCAK256"
										},
										{
											"begin": 2687,
											"end": 2714,
											"name": "SLOAD"
										},
										{
											"begin": 2687,
											"end": 2721,
											"name": "EQ"
										},
										{
											"begin": 2683,
											"end": 2818,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 2683,
											"end": 2818,
											"name": "JUMPI"
										},
										{
											"begin": 2768,
											"end": 2806,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 2800,
											"end": 2805,
											"name": "DUP3"
										},
										{
											"begin": 2768,
											"end": 2777,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2768,
											"end": 2783,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2778,
											"end": 2782,
											"name": "DUP8"
										},
										{
											"begin": 2768,
											"end": 2783,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2768,
											"end": 2783,
											"name": "AND"
										},
										{
											"begin": 2768,
											"end": 2783,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2768,
											"end": 2783,
											"name": "AND"
										},
										{
											"begin": 2768,
											"end": 2783,
											"name": "DUP2"
										},
										{
											"begin": 2768,
											"end": 2783,
											"name": "MSTORE"
										},
										{
											"begin": 2768,
											"end": 2783,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2768,
											"end": 2783,
											"name": "ADD"
										},
										{
											"begin": 2768,
											"end": 2783,
											"name": "SWAP1"
										},
										{
											"begin": 2768,
											"end": 2783,
											"name": "DUP2"
										},
										{
											"begin": 2768,
											"end": 2783,
											"name": "MSTORE"
										},
										{
											"begin": 2768,
											"end": 2783,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2768,
											"end": 2783,
											"name": "ADD"
										},
										{
											"begin": 2768,
											"end": 2783,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2768,
											"end": 2783,
											"name": "KECCAK256"
										},
										{
											"begin": 2768,
											"end": 2795,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2784,
											"end": 2794,
											"name": "CALLER"
										},
										{
											"begin": 2768,
											"end": 2795,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2768,
											"end": 2795,
											"name": "AND"
										},
										{
											"begin": 2768,
											"end": 2795,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2768,
											"end": 2795,
											"name": "AND"
										},
										{
											"begin": 2768,
											"end": 2795,
											"name": "DUP2"
										},
										{
											"begin": 2768,
											"end": 2795,
											"name": "MSTORE"
										},
										{
											"begin": 2768,
											"end": 2795,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2768,
											"end": 2795,
											"name": "ADD"
										},
										{
											"begin": 2768,
											"end": 2795,
											"name": "SWAP1"
										},
										{
											"begin": 2768,
											"end": 2795,
											"name": "DUP2"
										},
										{
											"begin": 2768,
											"end": 2795,
											"name": "MSTORE"
										},
										{
											"begin": 2768,
											"end": 2795,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2768,
											"end": 2795,
											"name": "ADD"
										},
										{
											"begin": 2768,
											"end": 2795,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2768,
											"end": 2795,
											"name": "KECCAK256"
										},
										{
											"begin": 2768,
											"end": 2795,
											"name": "SLOAD"
										},
										{
											"begin": 2768,
											"end": 2799,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 2768,
											"end": 2799,
											"name": "SWAP1"
										},
										{
											"begin": 2768,
											"end": 2806,
											"name": "SWAP2"
										},
										{
											"begin": 2768,
											"end": 2806,
											"name": "SWAP1"
										},
										{
											"begin": 2768,
											"end": 2806,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2768,
											"end": 2806,
											"name": "AND"
										},
										{
											"begin": 2768,
											"end": 2806,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2768,
											"end": 2806,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 2768,
											"end": 2806,
											"name": "JUMPDEST"
										},
										{
											"begin": 2738,
											"end": 2747,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2738,
											"end": 2753,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2748,
											"end": 2752,
											"name": "DUP7"
										},
										{
											"begin": 2738,
											"end": 2753,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2738,
											"end": 2753,
											"name": "AND"
										},
										{
											"begin": 2738,
											"end": 2753,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2738,
											"end": 2753,
											"name": "AND"
										},
										{
											"begin": 2738,
											"end": 2753,
											"name": "DUP2"
										},
										{
											"begin": 2738,
											"end": 2753,
											"name": "MSTORE"
										},
										{
											"begin": 2738,
											"end": 2753,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2738,
											"end": 2753,
											"name": "ADD"
										},
										{
											"begin": 2738,
											"end": 2753,
											"name": "SWAP1"
										},
										{
											"begin": 2738,
											"end": 2753,
											"name": "DUP2"
										},
										{
											"begin": 2738,
											"end": 2753,
											"name": "MSTORE"
										},
										{
											"begin": 2738,
											"end": 2753,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2738,
											"end": 2753,
											"name": "ADD"
										},
										{
											"begin": 2738,
											"end": 2753,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2738,
											"end": 2753,
											"name": "KECCAK256"
										},
										{
											"begin": 2738,
											"end": 2765,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2754,
											"end": 2764,
											"name": "CALLER"
										},
										{
											"begin": 2738,
											"end": 2765,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2738,
											"end": 2765,
											"name": "AND"
										},
										{
											"begin": 2738,
											"end": 2765,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2738,
											"end": 2765,
											"name": "AND"
										},
										{
											"begin": 2738,
											"end": 2765,
											"name": "DUP2"
										},
										{
											"begin": 2738,
											"end": 2765,
											"name": "MSTORE"
										},
										{
											"begin": 2738,
											"end": 2765,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2738,
											"end": 2765,
											"name": "ADD"
										},
										{
											"begin": 2738,
											"end": 2765,
											"name": "SWAP1"
										},
										{
											"begin": 2738,
											"end": 2765,
											"name": "DUP2"
										},
										{
											"begin": 2738,
											"end": 2765,
											"name": "MSTORE"
										},
										{
											"begin": 2738,
											"end": 2765,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2738,
											"end": 2765,
											"name": "ADD"
										},
										{
											"begin": 2738,
											"end": 2765,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2738,
											"end": 2765,
											"name": "KECCAK256"
										},
										{
											"begin": 2738,
											"end": 2806,
											"name": "DUP2"
										},
										{
											"begin": 2738,
											"end": 2806,
											"name": "SWAP1"
										},
										{
											"begin": 2738,
											"end": 2806,
											"name": "SSTORE"
										},
										{
											"begin": 2738,
											"end": 2806,
											"name": "POP"
										},
										{
											"begin": 2683,
											"end": 2818,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 2683,
											"end": 2818,
											"name": "JUMPDEST"
										},
										{
											"begin": 2828,
											"end": 2854,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 2838,
											"end": 2842,
											"name": "DUP5"
										},
										{
											"begin": 2844,
											"end": 2846,
											"name": "DUP5"
										},
										{
											"begin": 2848,
											"end": 2853,
											"name": "DUP5"
										},
										{
											"begin": 2828,
											"end": 2837,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 2828,
											"end": 2854,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2828,
											"end": 2854,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 2828,
											"end": 2854,
											"name": "JUMPDEST"
										},
										{
											"begin": 2872,
											"end": 2876,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2865,
											"end": 2876,
											"name": "SWAP1"
										},
										{
											"begin": 2865,
											"end": 2876,
											"name": "POP"
										},
										{
											"begin": 2588,
											"end": 2884,
											"name": "SWAP4"
										},
										{
											"begin": 2588,
											"end": 2884,
											"name": "SWAP3"
										},
										{
											"begin": 2588,
											"end": 2884,
											"name": "POP"
										},
										{
											"begin": 2588,
											"end": 2884,
											"name": "POP"
										},
										{
											"begin": 2588,
											"end": 2884,
											"name": "POP"
										},
										{
											"begin": 2588,
											"end": 2884,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 665,
											"end": 773,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 665,
											"end": 773,
											"name": "JUMPDEST"
										},
										{
											"begin": 707,
											"end": 773,
											"name": "PUSH",
											"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
										},
										{
											"begin": 665,
											"end": 773,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 665,
											"end": 773,
											"name": "SHL"
										},
										{
											"begin": 665,
											"end": 773,
											"name": "DUP2"
										},
										{
											"begin": 665,
											"end": 773,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 331,
											"end": 366,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 331,
											"end": 366,
											"name": "JUMPDEST"
										},
										{
											"begin": 364,
											"end": 366,
											"name": "PUSH",
											"value": "12"
										},
										{
											"begin": 331,
											"end": 366,
											"name": "DUP2"
										},
										{
											"begin": 331,
											"end": 366,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 522,
											"end": 553,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 522,
											"end": 553,
											"name": "JUMPDEST"
										},
										{
											"begin": 522,
											"end": 553,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 522,
											"end": 553,
											"name": "SLOAD"
										},
										{
											"begin": 522,
											"end": 553,
											"name": "DUP2"
										},
										{
											"begin": 522,
											"end": 553,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 404,
											"end": 445,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 404,
											"end": 445,
											"name": "JUMPDEST"
										},
										{
											"begin": 404,
											"end": 445,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 404,
											"end": 445,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 404,
											"end": 445,
											"name": "MSTORE"
										},
										{
											"begin": 404,
											"end": 445,
											"name": "DUP1"
										},
										{
											"begin": 404,
											"end": 445,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 404,
											"end": 445,
											"name": "MSTORE"
										},
										{
											"begin": 404,
											"end": 445,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 404,
											"end": 445,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 404,
											"end": 445,
											"name": "KECCAK256"
										},
										{
											"begin": 404,
											"end": 445,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 404,
											"end": 445,
											"name": "SWAP2"
										},
										{
											"begin": 404,
											"end": 445,
											"name": "POP"
										},
										{
											"begin": 404,
											"end": 445,
											"name": "SWAP1"
										},
										{
											"begin": 404,
											"end": 445,
											"name": "POP"
										},
										{
											"begin": 404,
											"end": 445,
											"name": "SLOAD"
										},
										{
											"begin": 404,
											"end": 445,
											"name": "DUP2"
										},
										{
											"begin": 404,
											"end": 445,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 780,
											"end": 818,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 780,
											"end": 818,
											"name": "JUMPDEST"
										},
										{
											"begin": 780,
											"end": 818,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 780,
											"end": 818,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 780,
											"end": 818,
											"name": "MSTORE"
										},
										{
											"begin": 780,
											"end": 818,
											"name": "DUP1"
										},
										{
											"begin": 780,
											"end": 818,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 780,
											"end": 818,
											"name": "MSTORE"
										},
										{
											"begin": 780,
											"end": 818,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 780,
											"end": 818,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 780,
											"end": 818,
											"name": "KECCAK256"
										},
										{
											"begin": 780,
											"end": 818,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 780,
											"end": 818,
											"name": "SWAP2"
										},
										{
											"begin": 780,
											"end": 818,
											"name": "POP"
										},
										{
											"begin": 780,
											"end": 818,
											"name": "SWAP1"
										},
										{
											"begin": 780,
											"end": 818,
											"name": "POP"
										},
										{
											"begin": 780,
											"end": 818,
											"name": "SLOAD"
										},
										{
											"begin": 780,
											"end": 818,
											"name": "DUP2"
										},
										{
											"begin": 780,
											"end": 818,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "JUMPDEST"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "MLOAD"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "DUP1"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "ADD"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "MSTORE"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "DUP1"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "DUP2"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "MSTORE"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "ADD"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "PUSH",
											"value": "554E492D56320000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "DUP2"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "MSTORE"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "POP"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "DUP2"
										},
										{
											"begin": 284,
											"end": 324,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2441,
											"end": 2580,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 2441,
											"end": 2580,
											"name": "JUMPDEST"
										},
										{
											"begin": 2501,
											"end": 2505,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2518,
											"end": 2550,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 2528,
											"end": 2538,
											"name": "CALLER"
										},
										{
											"begin": 2540,
											"end": 2542,
											"name": "DUP5"
										},
										{
											"begin": 2544,
											"end": 2549,
											"name": "DUP5"
										},
										{
											"begin": 2518,
											"end": 2527,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 2518,
											"end": 2550,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2518,
											"end": 2550,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 2518,
											"end": 2550,
											"name": "JUMPDEST"
										},
										{
											"begin": 2568,
											"end": 2572,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2561,
											"end": 2572,
											"name": "SWAP1"
										},
										{
											"begin": 2561,
											"end": 2572,
											"name": "POP"
										},
										{
											"begin": 2441,
											"end": 2580,
											"name": "SWAP3"
										},
										{
											"begin": 2441,
											"end": 2580,
											"name": "SWAP2"
										},
										{
											"begin": 2441,
											"end": 2580,
											"name": "POP"
										},
										{
											"begin": 2441,
											"end": 2580,
											"name": "POP"
										},
										{
											"begin": 2441,
											"end": 2580,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "JUMPDEST"
										},
										{
											"begin": 3038,
											"end": 3053,
											"name": "TIMESTAMP"
										},
										{
											"begin": 3026,
											"end": 3034,
											"name": "DUP5"
										},
										{
											"begin": 3026,
											"end": 3053,
											"name": "LT"
										},
										{
											"begin": 3026,
											"end": 3053,
											"name": "ISZERO"
										},
										{
											"begin": 3018,
											"end": 3072,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 3018,
											"end": 3072,
											"name": "JUMPI"
										},
										{
											"begin": 3018,
											"end": 3072,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3018,
											"end": 3072,
											"name": "MLOAD"
										},
										{
											"begin": 3018,
											"end": 3072,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3018,
											"end": 3072,
											"name": "DUP2"
										},
										{
											"begin": 3018,
											"end": 3072,
											"name": "MSTORE"
										},
										{
											"begin": 3018,
											"end": 3072,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3018,
											"end": 3072,
											"name": "ADD"
										},
										{
											"begin": 3018,
											"end": 3072,
											"name": "DUP1"
										},
										{
											"begin": 3018,
											"end": 3072,
											"name": "DUP1"
										},
										{
											"begin": 3018,
											"end": 3072,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3018,
											"end": 3072,
											"name": "ADD"
										},
										{
											"begin": 3018,
											"end": 3072,
											"name": "DUP3"
										},
										{
											"begin": 3018,
											"end": 3072,
											"name": "DUP2"
										},
										{
											"begin": 3018,
											"end": 3072,
											"name": "SUB"
										},
										{
											"begin": 3018,
											"end": 3072,
											"name": "DUP3"
										},
										{
											"begin": 3018,
											"end": 3072,
											"name": "MSTORE"
										},
										{
											"begin": 3018,
											"end": 3072,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 3018,
											"end": 3072,
											"name": "DUP2"
										},
										{
											"begin": 3018,
											"end": 3072,
											"name": "MSTORE"
										},
										{
											"begin": 3018,
											"end": 3072,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3018,
											"end": 3072,
											"name": "ADD"
										},
										{
											"begin": 3018,
											"end": 3072,
											"name": "DUP1"
										},
										{
											"begin": 3018,
											"end": 3072,
											"name": "PUSH",
											"value": "46537761703A2045585049524544000000000000000000000000000000000000"
										},
										{
											"begin": 3018,
											"end": 3072,
											"name": "DUP2"
										},
										{
											"begin": 3018,
											"end": 3072,
											"name": "MSTORE"
										},
										{
											"begin": 3018,
											"end": 3072,
											"name": "POP"
										},
										{
											"begin": 3018,
											"end": 3072,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3018,
											"end": 3072,
											"name": "ADD"
										},
										{
											"begin": 3018,
											"end": 3072,
											"name": "SWAP2"
										},
										{
											"begin": 3018,
											"end": 3072,
											"name": "POP"
										},
										{
											"begin": 3018,
											"end": 3072,
											"name": "POP"
										},
										{
											"begin": 3018,
											"end": 3072,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3018,
											"end": 3072,
											"name": "MLOAD"
										},
										{
											"begin": 3018,
											"end": 3072,
											"name": "DUP1"
										},
										{
											"begin": 3018,
											"end": 3072,
											"name": "SWAP2"
										},
										{
											"begin": 3018,
											"end": 3072,
											"name": "SUB"
										},
										{
											"begin": 3018,
											"end": 3072,
											"name": "SWAP1"
										},
										{
											"begin": 3018,
											"end": 3072,
											"name": "REVERT"
										},
										{
											"begin": 3018,
											"end": 3072,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 3018,
											"end": 3072,
											"name": "JUMPDEST"
										},
										{
											"begin": 3083,
											"end": 3097,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3188,
											"end": 3204,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 3188,
											"end": 3204,
											"name": "SLOAD"
										},
										{
											"begin": 707,
											"end": 773,
											"name": "PUSH",
											"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
										},
										{
											"begin": 3244,
											"end": 3259,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3244,
											"end": 3259,
											"name": "SHL"
										},
										{
											"begin": 3261,
											"end": 3266,
											"name": "DUP10"
										},
										{
											"begin": 3268,
											"end": 3275,
											"name": "DUP10"
										},
										{
											"begin": 3277,
											"end": 3282,
											"name": "DUP10"
										},
										{
											"begin": 3284,
											"end": 3290,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3284,
											"end": 3297,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3291,
											"end": 3296,
											"name": "DUP15"
										},
										{
											"begin": 3284,
											"end": 3297,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3284,
											"end": 3297,
											"name": "AND"
										},
										{
											"begin": 3284,
											"end": 3297,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3284,
											"end": 3297,
											"name": "AND"
										},
										{
											"begin": 3284,
											"end": 3297,
											"name": "DUP2"
										},
										{
											"begin": 3284,
											"end": 3297,
											"name": "MSTORE"
										},
										{
											"begin": 3284,
											"end": 3297,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3284,
											"end": 3297,
											"name": "ADD"
										},
										{
											"begin": 3284,
											"end": 3297,
											"name": "SWAP1"
										},
										{
											"begin": 3284,
											"end": 3297,
											"name": "DUP2"
										},
										{
											"begin": 3284,
											"end": 3297,
											"name": "MSTORE"
										},
										{
											"begin": 3284,
											"end": 3297,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3284,
											"end": 3297,
											"name": "ADD"
										},
										{
											"begin": 3284,
											"end": 3297,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3284,
											"end": 3297,
											"name": "KECCAK256"
										},
										{
											"begin": 3284,
											"end": 3297,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3284,
											"end": 3299,
											"name": "DUP2"
										},
										{
											"begin": 3284,
											"end": 3299,
											"name": "SLOAD"
										},
										{
											"begin": 3284,
											"end": 3299,
											"name": "DUP1"
										},
										{
											"begin": 3284,
											"end": 3299,
											"name": "SWAP3"
										},
										{
											"begin": 3284,
											"end": 3299,
											"name": "SWAP2"
										},
										{
											"begin": 3284,
											"end": 3299,
											"name": "SWAP1"
										},
										{
											"begin": 3284,
											"end": 3299,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3284,
											"end": 3299,
											"name": "ADD"
										},
										{
											"begin": 3284,
											"end": 3299,
											"name": "SWAP2"
										},
										{
											"begin": 3284,
											"end": 3299,
											"name": "SWAP1"
										},
										{
											"begin": 3284,
											"end": 3299,
											"name": "POP"
										},
										{
											"begin": 3284,
											"end": 3299,
											"name": "SSTORE"
										},
										{
											"begin": 3301,
											"end": 3309,
											"name": "DUP11"
										},
										{
											"begin": 3233,
											"end": 3310,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3233,
											"end": 3310,
											"name": "MLOAD"
										},
										{
											"begin": 3233,
											"end": 3310,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3233,
											"end": 3310,
											"name": "ADD"
										},
										{
											"begin": 3233,
											"end": 3310,
											"name": "DUP1"
										},
										{
											"begin": 3233,
											"end": 3310,
											"name": "DUP8"
										},
										{
											"begin": 3233,
											"end": 3310,
											"name": "DUP2"
										},
										{
											"begin": 3233,
											"end": 3310,
											"name": "MSTORE"
										},
										{
											"begin": 3233,
											"end": 3310,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3233,
											"end": 3310,
											"name": "ADD"
										},
										{
											"begin": 3233,
											"end": 3310,
											"name": "DUP7"
										},
										{
											"begin": 3233,
											"end": 3310,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3233,
											"end": 3310,
											"name": "AND"
										},
										{
											"begin": 3233,
											"end": 3310,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3233,
											"end": 3310,
											"name": "AND"
										},
										{
											"begin": 3233,
											"end": 3310,
											"name": "DUP2"
										},
										{
											"begin": 3233,
											"end": 3310,
											"name": "MSTORE"
										},
										{
											"begin": 3233,
											"end": 3310,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3233,
											"end": 3310,
											"name": "ADD"
										},
										{
											"begin": 3233,
											"end": 3310,
											"name": "DUP6"
										},
										{
											"begin": 3233,
											"end": 3310,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3233,
											"end": 3310,
											"name": "AND"
										},
										{
											"begin": 3233,
											"end": 3310,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3233,
											"end": 3310,
											"name": "AND"
										},
										{
											"begin": 3233,
											"end": 3310,
											"name": "DUP2"
										},
										{
											"begin": 3233,
											"end": 3310,
											"name": "MSTORE"
										},
										{
											"begin": 3233,
											"end": 3310,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3233,
											"end": 3310,
											"name": "ADD"
										},
										{
											"begin": 3233,
											"end": 3310,
											"name": "DUP5"
										},
										{
											"begin": 3233,
											"end": 3310,
											"name": "DUP2"
										},
										{
											"begin": 3233,
											"end": 3310,
											"name": "MSTORE"
										},
										{
											"begin": 3233,
											"end": 3310,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3233,
											"end": 3310,
											"name": "ADD"
										},
										{
											"begin": 3233,
											"end": 3310,
											"name": "DUP4"
										},
										{
											"begin": 3233,
											"end": 3310,
											"name": "DUP2"
										},
										{
											"begin": 3233,
											"end": 3310,
											"name": "MSTORE"
										},
										{
											"begin": 3233,
											"end": 3310,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3233,
											"end": 3310,
											"name": "ADD"
										},
										{
											"begin": 3233,
											"end": 3310,
											"name": "DUP3"
										},
										{
											"begin": 3233,
											"end": 3310,
											"name": "DUP2"
										},
										{
											"begin": 3233,
											"end": 3310,
											"name": "MSTORE"
										},
										{
											"begin": 3233,
											"end": 3310,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3233,
											"end": 3310,
											"name": "ADD"
										},
										{
											"begin": 3233,
											"end": 3310,
											"name": "SWAP7"
										},
										{
											"begin": 3233,
											"end": 3310,
											"name": "POP"
										},
										{
											"begin": 3233,
											"end": 3310,
											"name": "POP"
										},
										{
											"begin": 3233,
											"end": 3310,
											"name": "POP"
										},
										{
											"begin": 3233,
											"end": 3310,
											"name": "POP"
										},
										{
											"begin": 3233,
											"end": 3310,
											"name": "POP"
										},
										{
											"begin": 3233,
											"end": 3310,
											"name": "POP"
										},
										{
											"begin": 3233,
											"end": 3310,
											"name": "POP"
										},
										{
											"begin": 3233,
											"end": 3310,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3233,
											"end": 3310,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 3233,
											"end": 3310,
											"name": "SWAP1"
										},
										{
											"begin": 3233,
											"end": 3310,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3233,
											"end": 3310,
											"name": "MSTORE"
										},
										{
											"begin": 3223,
											"end": 3311,
											"name": "DUP1"
										},
										{
											"begin": 3223,
											"end": 3311,
											"name": "MLOAD"
										},
										{
											"begin": 3223,
											"end": 3311,
											"name": "SWAP1"
										},
										{
											"begin": 3223,
											"end": 3311,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3223,
											"end": 3311,
											"name": "ADD"
										},
										{
											"begin": 3223,
											"end": 3311,
											"name": "KECCAK256"
										},
										{
											"begin": 3124,
											"end": 3326,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3124,
											"end": 3326,
											"name": "MLOAD"
										},
										{
											"begin": 3124,
											"end": 3326,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3124,
											"end": 3326,
											"name": "ADD"
										},
										{
											"begin": 3124,
											"end": 3326,
											"name": "DUP1"
										},
										{
											"begin": 3124,
											"end": 3326,
											"name": "DUP1"
										},
										{
											"begin": 3124,
											"end": 3326,
											"name": "PUSH",
											"value": "1901000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3124,
											"end": 3326,
											"name": "DUP2"
										},
										{
											"begin": 3124,
											"end": 3326,
											"name": "MSTORE"
										},
										{
											"begin": 3124,
											"end": 3326,
											"name": "POP"
										},
										{
											"begin": 3124,
											"end": 3326,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3124,
											"end": 3326,
											"name": "ADD"
										},
										{
											"begin": 3124,
											"end": 3326,
											"name": "DUP4"
										},
										{
											"begin": 3124,
											"end": 3326,
											"name": "DUP2"
										},
										{
											"begin": 3124,
											"end": 3326,
											"name": "MSTORE"
										},
										{
											"begin": 3124,
											"end": 3326,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3124,
											"end": 3326,
											"name": "ADD"
										},
										{
											"begin": 3124,
											"end": 3326,
											"name": "DUP3"
										},
										{
											"begin": 3124,
											"end": 3326,
											"name": "DUP2"
										},
										{
											"begin": 3124,
											"end": 3326,
											"name": "MSTORE"
										},
										{
											"begin": 3124,
											"end": 3326,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3124,
											"end": 3326,
											"name": "ADD"
										},
										{
											"begin": 3124,
											"end": 3326,
											"name": "SWAP3"
										},
										{
											"begin": 3124,
											"end": 3326,
											"name": "POP"
										},
										{
											"begin": 3124,
											"end": 3326,
											"name": "POP"
										},
										{
											"begin": 3124,
											"end": 3326,
											"name": "POP"
										},
										{
											"begin": 3124,
											"end": 3326,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3124,
											"end": 3326,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 3124,
											"end": 3326,
											"name": "SWAP1"
										},
										{
											"begin": 3124,
											"end": 3326,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3124,
											"end": 3326,
											"name": "MSTORE"
										},
										{
											"begin": 3100,
											"end": 3337,
											"name": "DUP1"
										},
										{
											"begin": 3100,
											"end": 3337,
											"name": "MLOAD"
										},
										{
											"begin": 3100,
											"end": 3337,
											"name": "SWAP1"
										},
										{
											"begin": 3100,
											"end": 3337,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3100,
											"end": 3337,
											"name": "ADD"
										},
										{
											"begin": 3100,
											"end": 3337,
											"name": "KECCAK256"
										},
										{
											"begin": 3083,
											"end": 3337,
											"name": "SWAP1"
										},
										{
											"begin": 3083,
											"end": 3337,
											"name": "POP"
										},
										{
											"begin": 3348,
											"end": 3372,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3385,
											"end": 3391,
											"name": "DUP3"
										},
										{
											"begin": 3393,
											"end": 3394,
											"name": "DUP7"
										},
										{
											"begin": 3396,
											"end": 3397,
											"name": "DUP7"
										},
										{
											"begin": 3399,
											"end": 3400,
											"name": "DUP7"
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "MLOAD"
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "DUP2"
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "MSTORE"
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "ADD"
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "MSTORE"
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "MLOAD"
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "DUP1"
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "DUP6"
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "DUP2"
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "MSTORE"
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "ADD"
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "DUP5"
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "AND"
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "AND"
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "DUP2"
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "MSTORE"
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "ADD"
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "DUP4"
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "DUP2"
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "MSTORE"
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "ADD"
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "DUP3"
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "DUP2"
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "MSTORE"
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "ADD"
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "SWAP5"
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "POP"
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "POP"
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "POP"
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "POP"
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "POP"
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "MLOAD"
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "DUP2"
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "SUB"
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "SWAP1"
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "DUP1"
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "DUP5"
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "SUB"
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "SWAP1"
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "DUP6"
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "GAS"
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "STATICCALL"
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "POP"
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "POP"
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "POP"
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "MLOAD"
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "SUB"
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "MLOAD"
										},
										{
											"begin": 3348,
											"end": 3401,
											"name": "SWAP1"
										},
										{
											"begin": 3348,
											"end": 3401,
											"name": "POP"
										},
										{
											"begin": 3448,
											"end": 3449,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3420,
											"end": 3450,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3420,
											"end": 3450,
											"name": "AND"
										},
										{
											"begin": 3420,
											"end": 3436,
											"name": "DUP2"
										},
										{
											"begin": 3420,
											"end": 3450,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3420,
											"end": 3450,
											"name": "AND"
										},
										{
											"begin": 3420,
											"end": 3450,
											"name": "EQ"
										},
										{
											"begin": 3420,
											"end": 3450,
											"name": "ISZERO"
										},
										{
											"begin": 3420,
											"end": 3479,
											"name": "DUP1"
										},
										{
											"begin": 3420,
											"end": 3479,
											"name": "ISZERO"
										},
										{
											"begin": 3420,
											"end": 3479,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 3420,
											"end": 3479,
											"name": "JUMPI"
										},
										{
											"begin": 3420,
											"end": 3479,
											"name": "POP"
										},
										{
											"begin": 3474,
											"end": 3479,
											"name": "DUP9"
										},
										{
											"begin": 3454,
											"end": 3479,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3454,
											"end": 3479,
											"name": "AND"
										},
										{
											"begin": 3454,
											"end": 3470,
											"name": "DUP2"
										},
										{
											"begin": 3454,
											"end": 3479,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3454,
											"end": 3479,
											"name": "AND"
										},
										{
											"begin": 3454,
											"end": 3479,
											"name": "EQ"
										},
										{
											"begin": 3420,
											"end": 3479,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 3420,
											"end": 3479,
											"name": "JUMPDEST"
										},
										{
											"begin": 3412,
											"end": 3508,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 3412,
											"end": 3508,
											"name": "JUMPI"
										},
										{
											"begin": 3412,
											"end": 3508,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3412,
											"end": 3508,
											"name": "MLOAD"
										},
										{
											"begin": 3412,
											"end": 3508,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3412,
											"end": 3508,
											"name": "DUP2"
										},
										{
											"begin": 3412,
											"end": 3508,
											"name": "MSTORE"
										},
										{
											"begin": 3412,
											"end": 3508,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3412,
											"end": 3508,
											"name": "ADD"
										},
										{
											"begin": 3412,
											"end": 3508,
											"name": "DUP1"
										},
										{
											"begin": 3412,
											"end": 3508,
											"name": "DUP1"
										},
										{
											"begin": 3412,
											"end": 3508,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3412,
											"end": 3508,
											"name": "ADD"
										},
										{
											"begin": 3412,
											"end": 3508,
											"name": "DUP3"
										},
										{
											"begin": 3412,
											"end": 3508,
											"name": "DUP2"
										},
										{
											"begin": 3412,
											"end": 3508,
											"name": "SUB"
										},
										{
											"begin": 3412,
											"end": 3508,
											"name": "DUP3"
										},
										{
											"begin": 3412,
											"end": 3508,
											"name": "MSTORE"
										},
										{
											"begin": 3412,
											"end": 3508,
											"name": "PUSH",
											"value": "18"
										},
										{
											"begin": 3412,
											"end": 3508,
											"name": "DUP2"
										},
										{
											"begin": 3412,
											"end": 3508,
											"name": "MSTORE"
										},
										{
											"begin": 3412,
											"end": 3508,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3412,
											"end": 3508,
											"name": "ADD"
										},
										{
											"begin": 3412,
											"end": 3508,
											"name": "DUP1"
										},
										{
											"begin": 3412,
											"end": 3508,
											"name": "PUSH",
											"value": "46537761703A20494E56414C49445F5349474E41545552450000000000000000"
										},
										{
											"begin": 3412,
											"end": 3508,
											"name": "DUP2"
										},
										{
											"begin": 3412,
											"end": 3508,
											"name": "MSTORE"
										},
										{
											"begin": 3412,
											"end": 3508,
											"name": "POP"
										},
										{
											"begin": 3412,
											"end": 3508,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3412,
											"end": 3508,
											"name": "ADD"
										},
										{
											"begin": 3412,
											"end": 3508,
											"name": "SWAP2"
										},
										{
											"begin": 3412,
											"end": 3508,
											"name": "POP"
										},
										{
											"begin": 3412,
											"end": 3508,
											"name": "POP"
										},
										{
											"begin": 3412,
											"end": 3508,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3412,
											"end": 3508,
											"name": "MLOAD"
										},
										{
											"begin": 3412,
											"end": 3508,
											"name": "DUP1"
										},
										{
											"begin": 3412,
											"end": 3508,
											"name": "SWAP2"
										},
										{
											"begin": 3412,
											"end": 3508,
											"name": "SUB"
										},
										{
											"begin": 3412,
											"end": 3508,
											"name": "SWAP1"
										},
										{
											"begin": 3412,
											"end": 3508,
											"name": "REVERT"
										},
										{
											"begin": 3412,
											"end": 3508,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 3412,
											"end": 3508,
											"name": "JUMPDEST"
										},
										{
											"begin": 3519,
											"end": 3550,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 3528,
											"end": 3533,
											"name": "DUP10"
										},
										{
											"begin": 3535,
											"end": 3542,
											"name": "DUP10"
										},
										{
											"begin": 3544,
											"end": 3549,
											"name": "DUP10"
										},
										{
											"begin": 3519,
											"end": 3527,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 3519,
											"end": 3550,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3519,
											"end": 3550,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 3519,
											"end": 3550,
											"name": "JUMPDEST"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "POP"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "POP"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "POP"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "POP"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "POP"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "POP"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "POP"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "POP"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "POP"
										},
										{
											"begin": 2892,
											"end": 3558,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 452,
											"end": 513,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 452,
											"end": 513,
											"name": "JUMPDEST"
										},
										{
											"begin": 452,
											"end": 513,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 452,
											"end": 513,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 452,
											"end": 513,
											"name": "MSTORE"
										},
										{
											"begin": 452,
											"end": 513,
											"name": "DUP2"
										},
										{
											"begin": 452,
											"end": 513,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 452,
											"end": 513,
											"name": "MSTORE"
										},
										{
											"begin": 452,
											"end": 513,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 452,
											"end": 513,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 452,
											"end": 513,
											"name": "KECCAK256"
										},
										{
											"begin": 452,
											"end": 513,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 452,
											"end": 513,
											"name": "MSTORE"
										},
										{
											"begin": 452,
											"end": 513,
											"name": "DUP1"
										},
										{
											"begin": 452,
											"end": 513,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 452,
											"end": 513,
											"name": "MSTORE"
										},
										{
											"begin": 452,
											"end": 513,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 452,
											"end": 513,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 452,
											"end": 513,
											"name": "KECCAK256"
										},
										{
											"begin": 452,
											"end": 513,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 452,
											"end": 513,
											"name": "SWAP2"
										},
										{
											"begin": 452,
											"end": 513,
											"name": "POP"
										},
										{
											"begin": 452,
											"end": 513,
											"name": "SWAP2"
										},
										{
											"begin": 452,
											"end": 513,
											"name": "POP"
										},
										{
											"begin": 452,
											"end": 513,
											"name": "POP"
										},
										{
											"begin": 452,
											"end": 513,
											"name": "SLOAD"
										},
										{
											"begin": 452,
											"end": 513,
											"name": "DUP2"
										},
										{
											"begin": 452,
											"end": 513,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1881,
											"end": 2050,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 1881,
											"end": 2050,
											"name": "JUMPDEST"
										},
										{
											"begin": 1990,
											"end": 1995,
											"name": "DUP1"
										},
										{
											"begin": 1962,
											"end": 1971,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1962,
											"end": 1978,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1972,
											"end": 1977,
											"name": "DUP6"
										},
										{
											"begin": 1962,
											"end": 1978,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1962,
											"end": 1978,
											"name": "AND"
										},
										{
											"begin": 1962,
											"end": 1978,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1962,
											"end": 1978,
											"name": "AND"
										},
										{
											"begin": 1962,
											"end": 1978,
											"name": "DUP2"
										},
										{
											"begin": 1962,
											"end": 1978,
											"name": "MSTORE"
										},
										{
											"begin": 1962,
											"end": 1978,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1962,
											"end": 1978,
											"name": "ADD"
										},
										{
											"begin": 1962,
											"end": 1978,
											"name": "SWAP1"
										},
										{
											"begin": 1962,
											"end": 1978,
											"name": "DUP2"
										},
										{
											"begin": 1962,
											"end": 1978,
											"name": "MSTORE"
										},
										{
											"begin": 1962,
											"end": 1978,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1962,
											"end": 1978,
											"name": "ADD"
										},
										{
											"begin": 1962,
											"end": 1978,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1962,
											"end": 1978,
											"name": "KECCAK256"
										},
										{
											"begin": 1962,
											"end": 1987,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1979,
											"end": 1986,
											"name": "DUP5"
										},
										{
											"begin": 1962,
											"end": 1987,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1962,
											"end": 1987,
											"name": "AND"
										},
										{
											"begin": 1962,
											"end": 1987,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1962,
											"end": 1987,
											"name": "AND"
										},
										{
											"begin": 1962,
											"end": 1987,
											"name": "DUP2"
										},
										{
											"begin": 1962,
											"end": 1987,
											"name": "MSTORE"
										},
										{
											"begin": 1962,
											"end": 1987,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1962,
											"end": 1987,
											"name": "ADD"
										},
										{
											"begin": 1962,
											"end": 1987,
											"name": "SWAP1"
										},
										{
											"begin": 1962,
											"end": 1987,
											"name": "DUP2"
										},
										{
											"begin": 1962,
											"end": 1987,
											"name": "MSTORE"
										},
										{
											"begin": 1962,
											"end": 1987,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1962,
											"end": 1987,
											"name": "ADD"
										},
										{
											"begin": 1962,
											"end": 1987,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1962,
											"end": 1987,
											"name": "KECCAK256"
										},
										{
											"begin": 1962,
											"end": 1995,
											"name": "DUP2"
										},
										{
											"begin": 1962,
											"end": 1995,
											"name": "SWAP1"
										},
										{
											"begin": 1962,
											"end": 1995,
											"name": "SSTORE"
										},
										{
											"begin": 1962,
											"end": 1995,
											"name": "POP"
										},
										{
											"begin": 2027,
											"end": 2034,
											"name": "DUP2"
										},
										{
											"begin": 2011,
											"end": 2042,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2011,
											"end": 2042,
											"name": "AND"
										},
										{
											"begin": 2020,
											"end": 2025,
											"name": "DUP4"
										},
										{
											"begin": 2011,
											"end": 2042,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2011,
											"end": 2042,
											"name": "AND"
										},
										{
											"begin": 2011,
											"end": 2042,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 2036,
											"end": 2041,
											"name": "DUP4"
										},
										{
											"begin": 2011,
											"end": 2042,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2011,
											"end": 2042,
											"name": "MLOAD"
										},
										{
											"begin": 2011,
											"end": 2042,
											"name": "DUP1"
										},
										{
											"begin": 2011,
											"end": 2042,
											"name": "DUP3"
										},
										{
											"begin": 2011,
											"end": 2042,
											"name": "DUP2"
										},
										{
											"begin": 2011,
											"end": 2042,
											"name": "MSTORE"
										},
										{
											"begin": 2011,
											"end": 2042,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2011,
											"end": 2042,
											"name": "ADD"
										},
										{
											"begin": 2011,
											"end": 2042,
											"name": "SWAP2"
										},
										{
											"begin": 2011,
											"end": 2042,
											"name": "POP"
										},
										{
											"begin": 2011,
											"end": 2042,
											"name": "POP"
										},
										{
											"begin": 2011,
											"end": 2042,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2011,
											"end": 2042,
											"name": "MLOAD"
										},
										{
											"begin": 2011,
											"end": 2042,
											"name": "DUP1"
										},
										{
											"begin": 2011,
											"end": 2042,
											"name": "SWAP2"
										},
										{
											"begin": 2011,
											"end": 2042,
											"name": "SUB"
										},
										{
											"begin": 2011,
											"end": 2042,
											"name": "SWAP1"
										},
										{
											"begin": 2011,
											"end": 2042,
											"name": "LOG3"
										},
										{
											"begin": 1881,
											"end": 2050,
											"name": "POP"
										},
										{
											"begin": 1881,
											"end": 2050,
											"name": "POP"
										},
										{
											"begin": 1881,
											"end": 2050,
											"name": "POP"
										},
										{
											"begin": 1881,
											"end": 2050,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 330,
											"end": 459,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 330,
											"end": 459,
											"name": "JUMPDEST"
										},
										{
											"begin": 382,
											"end": 388,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 424,
											"end": 425,
											"name": "DUP3"
										},
										{
											"begin": 418,
											"end": 419,
											"name": "DUP3"
										},
										{
											"begin": 414,
											"end": 415,
											"name": "DUP5"
										},
										{
											"begin": 414,
											"end": 419,
											"name": "SUB"
										},
										{
											"begin": 410,
											"end": 419,
											"name": "SWAP2"
										},
										{
											"begin": 410,
											"end": 419,
											"name": "POP"
										},
										{
											"begin": 410,
											"end": 419,
											"name": "DUP2"
										},
										{
											"begin": 409,
											"end": 425,
											"name": "GT"
										},
										{
											"begin": 409,
											"end": 425,
											"name": "ISZERO"
										},
										{
											"begin": 401,
											"end": 451,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 401,
											"end": 451,
											"name": "JUMPI"
										},
										{
											"begin": 401,
											"end": 451,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 401,
											"end": 451,
											"name": "MLOAD"
										},
										{
											"begin": 401,
											"end": 451,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 401,
											"end": 451,
											"name": "DUP2"
										},
										{
											"begin": 401,
											"end": 451,
											"name": "MSTORE"
										},
										{
											"begin": 401,
											"end": 451,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 401,
											"end": 451,
											"name": "ADD"
										},
										{
											"begin": 401,
											"end": 451,
											"name": "DUP1"
										},
										{
											"begin": 401,
											"end": 451,
											"name": "DUP1"
										},
										{
											"begin": 401,
											"end": 451,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 401,
											"end": 451,
											"name": "ADD"
										},
										{
											"begin": 401,
											"end": 451,
											"name": "DUP3"
										},
										{
											"begin": 401,
											"end": 451,
											"name": "DUP2"
										},
										{
											"begin": 401,
											"end": 451,
											"name": "SUB"
										},
										{
											"begin": 401,
											"end": 451,
											"name": "DUP3"
										},
										{
											"begin": 401,
											"end": 451,
											"name": "MSTORE"
										},
										{
											"begin": 401,
											"end": 451,
											"name": "PUSH",
											"value": "15"
										},
										{
											"begin": 401,
											"end": 451,
											"name": "DUP2"
										},
										{
											"begin": 401,
											"end": 451,
											"name": "MSTORE"
										},
										{
											"begin": 401,
											"end": 451,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 401,
											"end": 451,
											"name": "ADD"
										},
										{
											"begin": 401,
											"end": 451,
											"name": "DUP1"
										},
										{
											"begin": 401,
											"end": 451,
											"name": "PUSH",
											"value": "64732D6D6174682D7375622D756E646572666C6F770000000000000000000000"
										},
										{
											"begin": 401,
											"end": 451,
											"name": "DUP2"
										},
										{
											"begin": 401,
											"end": 451,
											"name": "MSTORE"
										},
										{
											"begin": 401,
											"end": 451,
											"name": "POP"
										},
										{
											"begin": 401,
											"end": 451,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 401,
											"end": 451,
											"name": "ADD"
										},
										{
											"begin": 401,
											"end": 451,
											"name": "SWAP2"
										},
										{
											"begin": 401,
											"end": 451,
											"name": "POP"
										},
										{
											"begin": 401,
											"end": 451,
											"name": "POP"
										},
										{
											"begin": 401,
											"end": 451,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 401,
											"end": 451,
											"name": "MLOAD"
										},
										{
											"begin": 401,
											"end": 451,
											"name": "DUP1"
										},
										{
											"begin": 401,
											"end": 451,
											"name": "SWAP2"
										},
										{
											"begin": 401,
											"end": 451,
											"name": "SUB"
										},
										{
											"begin": 401,
											"end": 451,
											"name": "SWAP1"
										},
										{
											"begin": 401,
											"end": 451,
											"name": "REVERT"
										},
										{
											"begin": 401,
											"end": 451,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 401,
											"end": 451,
											"name": "JUMPDEST"
										},
										{
											"begin": 330,
											"end": 459,
											"name": "SWAP3"
										},
										{
											"begin": 330,
											"end": 459,
											"name": "SWAP2"
										},
										{
											"begin": 330,
											"end": 459,
											"name": "POP"
										},
										{
											"begin": 330,
											"end": 459,
											"name": "POP"
										},
										{
											"begin": 330,
											"end": 459,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2058,
											"end": 2278,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 2058,
											"end": 2278,
											"name": "JUMPDEST"
										},
										{
											"begin": 2152,
											"end": 2178,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 2172,
											"end": 2177,
											"name": "DUP2"
										},
										{
											"begin": 2152,
											"end": 2161,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2152,
											"end": 2167,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2162,
											"end": 2166,
											"name": "DUP7"
										},
										{
											"begin": 2152,
											"end": 2167,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2152,
											"end": 2167,
											"name": "AND"
										},
										{
											"begin": 2152,
											"end": 2167,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2152,
											"end": 2167,
											"name": "AND"
										},
										{
											"begin": 2152,
											"end": 2167,
											"name": "DUP2"
										},
										{
											"begin": 2152,
											"end": 2167,
											"name": "MSTORE"
										},
										{
											"begin": 2152,
											"end": 2167,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2152,
											"end": 2167,
											"name": "ADD"
										},
										{
											"begin": 2152,
											"end": 2167,
											"name": "SWAP1"
										},
										{
											"begin": 2152,
											"end": 2167,
											"name": "DUP2"
										},
										{
											"begin": 2152,
											"end": 2167,
											"name": "MSTORE"
										},
										{
											"begin": 2152,
											"end": 2167,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2152,
											"end": 2167,
											"name": "ADD"
										},
										{
											"begin": 2152,
											"end": 2167,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2152,
											"end": 2167,
											"name": "KECCAK256"
										},
										{
											"begin": 2152,
											"end": 2167,
											"name": "SLOAD"
										},
										{
											"begin": 2152,
											"end": 2171,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 2152,
											"end": 2171,
											"name": "SWAP1"
										},
										{
											"begin": 2152,
											"end": 2178,
											"name": "SWAP2"
										},
										{
											"begin": 2152,
											"end": 2178,
											"name": "SWAP1"
										},
										{
											"begin": 2152,
											"end": 2178,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2152,
											"end": 2178,
											"name": "AND"
										},
										{
											"begin": 2152,
											"end": 2178,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2152,
											"end": 2178,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 2152,
											"end": 2178,
											"name": "JUMPDEST"
										},
										{
											"begin": 2134,
											"end": 2143,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2134,
											"end": 2149,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2148,
											"name": "DUP6"
										},
										{
											"begin": 2134,
											"end": 2149,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2134,
											"end": 2149,
											"name": "AND"
										},
										{
											"begin": 2134,
											"end": 2149,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2134,
											"end": 2149,
											"name": "AND"
										},
										{
											"begin": 2134,
											"end": 2149,
											"name": "DUP2"
										},
										{
											"begin": 2134,
											"end": 2149,
											"name": "MSTORE"
										},
										{
											"begin": 2134,
											"end": 2149,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2134,
											"end": 2149,
											"name": "ADD"
										},
										{
											"begin": 2134,
											"end": 2149,
											"name": "SWAP1"
										},
										{
											"begin": 2134,
											"end": 2149,
											"name": "DUP2"
										},
										{
											"begin": 2134,
											"end": 2149,
											"name": "MSTORE"
										},
										{
											"begin": 2134,
											"end": 2149,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2134,
											"end": 2149,
											"name": "ADD"
										},
										{
											"begin": 2134,
											"end": 2149,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2134,
											"end": 2149,
											"name": "KECCAK256"
										},
										{
											"begin": 2134,
											"end": 2178,
											"name": "DUP2"
										},
										{
											"begin": 2134,
											"end": 2178,
											"name": "SWAP1"
										},
										{
											"begin": 2134,
											"end": 2178,
											"name": "SSTORE"
										},
										{
											"begin": 2134,
											"end": 2178,
											"name": "POP"
										},
										{
											"begin": 2205,
											"end": 2229,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 2223,
											"end": 2228,
											"name": "DUP2"
										},
										{
											"begin": 2205,
											"end": 2214,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2205,
											"end": 2218,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2215,
											"end": 2217,
											"name": "DUP6"
										},
										{
											"begin": 2205,
											"end": 2218,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2205,
											"end": 2218,
											"name": "AND"
										},
										{
											"begin": 2205,
											"end": 2218,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2205,
											"end": 2218,
											"name": "AND"
										},
										{
											"begin": 2205,
											"end": 2218,
											"name": "DUP2"
										},
										{
											"begin": 2205,
											"end": 2218,
											"name": "MSTORE"
										},
										{
											"begin": 2205,
											"end": 2218,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2205,
											"end": 2218,
											"name": "ADD"
										},
										{
											"begin": 2205,
											"end": 2218,
											"name": "SWAP1"
										},
										{
											"begin": 2205,
											"end": 2218,
											"name": "DUP2"
										},
										{
											"begin": 2205,
											"end": 2218,
											"name": "MSTORE"
										},
										{
											"begin": 2205,
											"end": 2218,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2205,
											"end": 2218,
											"name": "ADD"
										},
										{
											"begin": 2205,
											"end": 2218,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2205,
											"end": 2218,
											"name": "KECCAK256"
										},
										{
											"begin": 2205,
											"end": 2218,
											"name": "SLOAD"
										},
										{
											"begin": 2205,
											"end": 2222,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 2205,
											"end": 2222,
											"name": "SWAP1"
										},
										{
											"begin": 2205,
											"end": 2229,
											"name": "SWAP2"
										},
										{
											"begin": 2205,
											"end": 2229,
											"name": "SWAP1"
										},
										{
											"begin": 2205,
											"end": 2229,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2205,
											"end": 2229,
											"name": "AND"
										},
										{
											"begin": 2205,
											"end": 2229,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2205,
											"end": 2229,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 2205,
											"end": 2229,
											"name": "JUMPDEST"
										},
										{
											"begin": 2189,
											"end": 2198,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2189,
											"end": 2202,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2199,
											"end": 2201,
											"name": "DUP5"
										},
										{
											"begin": 2189,
											"end": 2202,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2189,
											"end": 2202,
											"name": "AND"
										},
										{
											"begin": 2189,
											"end": 2202,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2189,
											"end": 2202,
											"name": "AND"
										},
										{
											"begin": 2189,
											"end": 2202,
											"name": "DUP2"
										},
										{
											"begin": 2189,
											"end": 2202,
											"name": "MSTORE"
										},
										{
											"begin": 2189,
											"end": 2202,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2189,
											"end": 2202,
											"name": "ADD"
										},
										{
											"begin": 2189,
											"end": 2202,
											"name": "SWAP1"
										},
										{
											"begin": 2189,
											"end": 2202,
											"name": "DUP2"
										},
										{
											"begin": 2189,
											"end": 2202,
											"name": "MSTORE"
										},
										{
											"begin": 2189,
											"end": 2202,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2189,
											"end": 2202,
											"name": "ADD"
										},
										{
											"begin": 2189,
											"end": 2202,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2189,
											"end": 2202,
											"name": "KECCAK256"
										},
										{
											"begin": 2189,
											"end": 2229,
											"name": "DUP2"
										},
										{
											"begin": 2189,
											"end": 2229,
											"name": "SWAP1"
										},
										{
											"begin": 2189,
											"end": 2229,
											"name": "SSTORE"
										},
										{
											"begin": 2189,
											"end": 2229,
											"name": "POP"
										},
										{
											"begin": 2260,
											"end": 2262,
											"name": "DUP2"
										},
										{
											"begin": 2245,
											"end": 2270,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2245,
											"end": 2270,
											"name": "AND"
										},
										{
											"begin": 2254,
											"end": 2258,
											"name": "DUP4"
										},
										{
											"begin": 2245,
											"end": 2270,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2245,
											"end": 2270,
											"name": "AND"
										},
										{
											"begin": 2245,
											"end": 2270,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 2264,
											"end": 2269,
											"name": "DUP4"
										},
										{
											"begin": 2245,
											"end": 2270,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2245,
											"end": 2270,
											"name": "MLOAD"
										},
										{
											"begin": 2245,
											"end": 2270,
											"name": "DUP1"
										},
										{
											"begin": 2245,
											"end": 2270,
											"name": "DUP3"
										},
										{
											"begin": 2245,
											"end": 2270,
											"name": "DUP2"
										},
										{
											"begin": 2245,
											"end": 2270,
											"name": "MSTORE"
										},
										{
											"begin": 2245,
											"end": 2270,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2245,
											"end": 2270,
											"name": "ADD"
										},
										{
											"begin": 2245,
											"end": 2270,
											"name": "SWAP2"
										},
										{
											"begin": 2245,
											"end": 2270,
											"name": "POP"
										},
										{
											"begin": 2245,
											"end": 2270,
											"name": "POP"
										},
										{
											"begin": 2245,
											"end": 2270,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2245,
											"end": 2270,
											"name": "MLOAD"
										},
										{
											"begin": 2245,
											"end": 2270,
											"name": "DUP1"
										},
										{
											"begin": 2245,
											"end": 2270,
											"name": "SWAP2"
										},
										{
											"begin": 2245,
											"end": 2270,
											"name": "SUB"
										},
										{
											"begin": 2245,
											"end": 2270,
											"name": "SWAP1"
										},
										{
											"begin": 2245,
											"end": 2270,
											"name": "LOG3"
										},
										{
											"begin": 2058,
											"end": 2278,
											"name": "POP"
										},
										{
											"begin": 2058,
											"end": 2278,
											"name": "POP"
										},
										{
											"begin": 2058,
											"end": 2278,
											"name": "POP"
										},
										{
											"begin": 2058,
											"end": 2278,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 194,
											"end": 322,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 194,
											"end": 322,
											"name": "JUMPDEST"
										},
										{
											"begin": 246,
											"end": 252,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 288,
											"end": 289,
											"name": "DUP3"
										},
										{
											"begin": 282,
											"end": 283,
											"name": "DUP3"
										},
										{
											"begin": 278,
											"end": 279,
											"name": "DUP5"
										},
										{
											"begin": 278,
											"end": 283,
											"name": "ADD"
										},
										{
											"begin": 274,
											"end": 283,
											"name": "SWAP2"
										},
										{
											"begin": 274,
											"end": 283,
											"name": "POP"
										},
										{
											"begin": 274,
											"end": 283,
											"name": "DUP2"
										},
										{
											"begin": 273,
											"end": 289,
											"name": "LT"
										},
										{
											"begin": 273,
											"end": 289,
											"name": "ISZERO"
										},
										{
											"begin": 265,
											"end": 314,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 265,
											"end": 314,
											"name": "JUMPI"
										},
										{
											"begin": 265,
											"end": 314,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 265,
											"end": 314,
											"name": "MLOAD"
										},
										{
											"begin": 265,
											"end": 314,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 265,
											"end": 314,
											"name": "DUP2"
										},
										{
											"begin": 265,
											"end": 314,
											"name": "MSTORE"
										},
										{
											"begin": 265,
											"end": 314,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 265,
											"end": 314,
											"name": "ADD"
										},
										{
											"begin": 265,
											"end": 314,
											"name": "DUP1"
										},
										{
											"begin": 265,
											"end": 314,
											"name": "DUP1"
										},
										{
											"begin": 265,
											"end": 314,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 265,
											"end": 314,
											"name": "ADD"
										},
										{
											"begin": 265,
											"end": 314,
											"name": "DUP3"
										},
										{
											"begin": 265,
											"end": 314,
											"name": "DUP2"
										},
										{
											"begin": 265,
											"end": 314,
											"name": "SUB"
										},
										{
											"begin": 265,
											"end": 314,
											"name": "DUP3"
										},
										{
											"begin": 265,
											"end": 314,
											"name": "MSTORE"
										},
										{
											"begin": 265,
											"end": 314,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 265,
											"end": 314,
											"name": "DUP2"
										},
										{
											"begin": 265,
											"end": 314,
											"name": "MSTORE"
										},
										{
											"begin": 265,
											"end": 314,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 265,
											"end": 314,
											"name": "ADD"
										},
										{
											"begin": 265,
											"end": 314,
											"name": "DUP1"
										},
										{
											"begin": 265,
											"end": 314,
											"name": "PUSH",
											"value": "64732D6D6174682D6164642D6F766572666C6F77000000000000000000000000"
										},
										{
											"begin": 265,
											"end": 314,
											"name": "DUP2"
										},
										{
											"begin": 265,
											"end": 314,
											"name": "MSTORE"
										},
										{
											"begin": 265,
											"end": 314,
											"name": "POP"
										},
										{
											"begin": 265,
											"end": 314,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 265,
											"end": 314,
											"name": "ADD"
										},
										{
											"begin": 265,
											"end": 314,
											"name": "SWAP2"
										},
										{
											"begin": 265,
											"end": 314,
											"name": "POP"
										},
										{
											"begin": 265,
											"end": 314,
											"name": "POP"
										},
										{
											"begin": 265,
											"end": 314,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 265,
											"end": 314,
											"name": "MLOAD"
										},
										{
											"begin": 265,
											"end": 314,
											"name": "DUP1"
										},
										{
											"begin": 265,
											"end": 314,
											"name": "SWAP2"
										},
										{
											"begin": 265,
											"end": 314,
											"name": "SUB"
										},
										{
											"begin": 265,
											"end": 314,
											"name": "SWAP1"
										},
										{
											"begin": 265,
											"end": 314,
											"name": "REVERT"
										},
										{
											"begin": 265,
											"end": 314,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 265,
											"end": 314,
											"name": "JUMPDEST"
										},
										{
											"begin": 194,
											"end": 322,
											"name": "SWAP3"
										},
										{
											"begin": 194,
											"end": 322,
											"name": "SWAP2"
										},
										{
											"begin": 194,
											"end": 322,
											"name": "POP"
										},
										{
											"begin": 194,
											"end": 322,
											"name": "POP"
										},
										{
											"begin": 194,
											"end": 322,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								},
								"8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429"
							}
						},
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"PERMIT_TYPEHASH()": "30adf81f",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/FOTOM.sol\":\"FOTOM\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/FOTOM.sol\":{\"keccak256\":\"0x420f3c5773c192e28328d0f2315baf206435ddeb5091304576ddcb4f05c8c84e\",\"urls\":[\"bzz-raw://7085f9e165dbcd77c963bfd8a47e00166521cedb7cd94af8b8b9e7c83ab07b73\",\"dweb:/ipfs/QmcAMnYCStES4jrKckb2odbK15B44Zr3MTRhwzFeV9xAZj\"]},\"contracts/interfaces/IFOTOM.sol\":{\"keccak256\":\"0x7ab1ceaa60e659a7d1cf2ba20a2e3d53ee330b11dd16da2ef555e2ff56893a6c\",\"urls\":[\"bzz-raw://dc719b4ffee7d219bebbd39390c8b234bb105a6b7679186efd2f6595f5c9ef02\",\"dweb:/ipfs/QmfAyG77QRNjqjKAGK9mjEyfWQNCjNFCcJMLuWe4YyU8Ah\"]},\"contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x19ed2bac2273975c1734c0858c1c8db08ccc11bb71b5c147128a2a143c23445c\",\"urls\":[\"bzz-raw://bf2e9b53b6d095c83b38960536d45edf1f95a1ecea184c5a9669ab892023e80f\",\"dweb:/ipfs/QmVEv6Z6t11cGk2WqP8VVr6GJrazP82UsC34KkoWAgCBHs\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "contracts/FOTOM.sol:FOTOM",
								"label": "totalSupply",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 30,
								"contract": "contracts/FOTOM.sol:FOTOM",
								"label": "balanceOf",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 36,
								"contract": "contracts/FOTOM.sol:FOTOM",
								"label": "allowance",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 38,
								"contract": "contracts/FOTOM.sol:FOTOM",
								"label": "DOMAIN_SEPARATOR",
								"offset": 0,
								"slot": "3",
								"type": "t_bytes32"
							},
							{
								"astId": 45,
								"contract": "contracts/FOTOM.sol:FOTOM",
								"label": "nonces",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"contracts/interfaces/IFOTOM.sol": {
				"IFOTOM": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"PERMIT_TYPEHASH()": "30adf81f",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IFOTOM.sol\":\"IFOTOM\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IFOTOM.sol\":{\"keccak256\":\"0x7ab1ceaa60e659a7d1cf2ba20a2e3d53ee330b11dd16da2ef555e2ff56893a6c\",\"urls\":[\"bzz-raw://dc719b4ffee7d219bebbd39390c8b234bb105a6b7679186efd2f6595f5c9ef02\",\"dweb:/ipfs/QmfAyG77QRNjqjKAGK9mjEyfWQNCjNFCcJMLuWe4YyU8Ah\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"contracts/libraries/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/libraries/SafeMath.sol\":170:612  library SafeMath {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/libraries/SafeMath.sol\":170:612  library SafeMath {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a72315820b2468d093157a9a0cf7e9712f878ecde1ccdc1a04b98176cf8ff8605a3d819ad64736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820b2468d093157a9a0cf7e9712f878ecde1ccdc1a04b98176cf8ff8605a3d819ad64736f6c63430005100032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xB2 CHAINID DUP14 MULMOD BALANCE JUMPI 0xA9 LOG0 0xCF PUSH31 0x9712F878ECDE1CCDC1A04B98176CF8FF8605A3D819AD64736F6C6343000510 STOP ORIGIN ",
							"sourceMap": "170:442:2:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820b2468d093157a9a0cf7e9712f878ecde1ccdc1a04b98176cf8ff8605a3d819ad64736f6c63430005100032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xB2 CHAINID DUP14 MULMOD BALANCE JUMPI 0xA9 LOG0 0xCF PUSH31 0x9712F878ECDE1CCDC1A04B98176CF8FF8605A3D819AD64736F6C6343000510 STOP ORIGIN ",
							"sourceMap": "170:442:2:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 170,
									"end": 612,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 170,
									"end": 612,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820b2468d093157a9a0cf7e9712f878ecde1ccdc1a04b98176cf8ff8605a3d819ad64736f6c63430005100032",
									".code": [
										{
											"begin": 170,
											"end": 612,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 170,
											"end": 612,
											"name": "ADDRESS"
										},
										{
											"begin": 170,
											"end": 612,
											"name": "EQ"
										},
										{
											"begin": 170,
											"end": 612,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 170,
											"end": 612,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 170,
											"end": 612,
											"name": "MSTORE"
										},
										{
											"begin": 170,
											"end": 612,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 170,
											"end": 612,
											"name": "DUP1"
										},
										{
											"begin": 170,
											"end": 612,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x19ed2bac2273975c1734c0858c1c8db08ccc11bb71b5c147128a2a143c23445c\",\"urls\":[\"bzz-raw://bf2e9b53b6d095c83b38960536d45edf1f95a1ecea184c5a9669ab892023e80f\",\"dweb:/ipfs/QmVEv6Z6t11cGk2WqP8VVr6GJrazP82UsC34KkoWAgCBHs\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"contracts/FOTOM.sol": {
				"ast": {
					"absolutePath": "contracts/FOTOM.sol",
					"exportedSymbols": {
						"FOTOM": [
							372
						]
					},
					"id": 373,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "33:25:0"
						},
						{
							"absolutePath": "contracts/interfaces/IFOTOM.sol",
							"file": "./interfaces/IFOTOM.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 373,
							"sourceUnit": 491,
							"src": "62:33:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/libraries/SafeMath.sol",
							"file": "./libraries/SafeMath.sol",
							"id": 3,
							"nodeType": "ImportDirective",
							"scope": 373,
							"sourceUnit": 566,
							"src": "97:34:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 4,
										"name": "IFOTOM",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 490,
										"src": "153:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IFOTOM_$490",
											"typeString": "contract IFOTOM"
										}
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "153:6:0"
								}
							],
							"contractDependencies": [
								490
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 372,
							"linearizedBaseContracts": [
								372,
								490
							],
							"name": "FOTOM",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 8,
									"libraryName": {
										"contractScope": null,
										"id": 6,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 565,
										"src": "173:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$565",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "167:24:0",
									"typeName": {
										"id": 7,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "186:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"id": 15,
									"name": "MAX",
									"nodeType": "VariableDeclaration",
									"scope": 372,
									"src": "197:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 9,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "197:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"commonType": {
											"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
											"typeString": "int_const 1157...(70 digits omitted)...9935"
										},
										"id": 14,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"argumentTypes": null,
											"commonType": {
												"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
												"typeString": "int_const 1157...(70 digits omitted)...9936"
											},
											"id": 12,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"argumentTypes": null,
												"hexValue": "32",
												"id": 10,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "220:1:0",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"argumentTypes": null,
												"hexValue": "323536",
												"id": 11,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "223:3:0",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_rational_256_by_1",
													"typeString": "int_const 256"
												},
												"value": "256"
											},
											"src": "220:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
												"typeString": "int_const 1157...(70 digits omitted)...9936"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"argumentTypes": null,
											"hexValue": "31",
											"id": 13,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "227:1:0",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "220:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
											"typeString": "int_const 1157...(70 digits omitted)...9935"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 18,
									"name": "name",
									"nodeType": "VariableDeclaration",
									"scope": 372,
									"src": "235:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory",
										"typeString": "string"
									},
									"typeName": {
										"id": 16,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "235:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "556e6973776170205632",
										"id": 17,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "265:12:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_bfcc8ef98ffbf7b6c3fec7bf5185b566b9863e35a9d83acd49ad6824b5969738",
											"typeString": "literal_string \"Uniswap V2\""
										},
										"value": "Uniswap V2"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 21,
									"name": "symbol",
									"nodeType": "VariableDeclaration",
									"scope": 372,
									"src": "284:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory",
										"typeString": "string"
									},
									"typeName": {
										"id": 19,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "284:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "554e492d5632",
										"id": 20,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "316:8:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_0c49a525f6758cfb27d0ada1467d2a2e99733995423d47ae30ae4ba2ba563255",
											"typeString": "literal_string \"UNI-V2\""
										},
										"value": "UNI-V2"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 24,
									"name": "decimals",
									"nodeType": "VariableDeclaration",
									"scope": 372,
									"src": "331:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 22,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "331:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3138",
										"id": 23,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "364:2:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "18"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 26,
									"name": "totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 372,
									"src": "373:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 25,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "373:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 30,
									"name": "balanceOf",
									"nodeType": "VariableDeclaration",
									"scope": 372,
									"src": "404:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 29,
										"keyType": {
											"id": 27,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "412:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "404:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 28,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "423:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 36,
									"name": "allowance",
									"nodeType": "VariableDeclaration",
									"scope": 372,
									"src": "452:61:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 35,
										"keyType": {
											"id": 31,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "460:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "452:44:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 34,
											"keyType": {
												"id": 32,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "479:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "471:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 33,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "490:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 38,
									"name": "DOMAIN_SEPARATOR",
									"nodeType": "VariableDeclaration",
									"scope": 372,
									"src": "522:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 37,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "522:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 41,
									"name": "PERMIT_TYPEHASH",
									"nodeType": "VariableDeclaration",
									"scope": 372,
									"src": "665:108:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 39,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "665:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "307836653731656461653132623162393766346431663630333730666566313031303566613266616165303132363131346131363963363438343564363132366339",
										"id": 40,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "707:66:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_49955707469362902507454157297736832118868343942642399513960811609542965143241_by_1",
											"typeString": "int_const 4995...(69 digits omitted)...3241"
										},
										"value": "0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 45,
									"name": "nonces",
									"nodeType": "VariableDeclaration",
									"scope": 372,
									"src": "780:38:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 44,
										"keyType": {
											"id": 42,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "788:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "780:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 43,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "799:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 77,
										"nodeType": "Block",
										"src": "1010:437:0",
										"statements": [
											{
												"assignments": [
													49
												],
												"declarations": [
													{
														"constant": false,
														"id": 49,
														"name": "chainId",
														"nodeType": "VariableDeclaration",
														"scope": 77,
														"src": "1021:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 48,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1021:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 50,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "1021:12:0"
											},
											{
												"externalReferences": [
													{
														"chainId": {
															"declaration": 49,
															"isOffset": false,
															"isSlot": false,
															"src": "1068:7:0",
															"valueSize": 1
														}
													}
												],
												"id": 51,
												"nodeType": "InlineAssembly",
												"operations": "{ chainId := chainid() }",
												"src": "1044:53:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 52,
														"name": "DOMAIN_SEPARATOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 38,
														"src": "1107:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"hexValue": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
																				"id": 57,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1189:84:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
																					"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
																				},
																				"value": "EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
																					"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
																				}
																			],
																			"id": 56,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 574,
																			"src": "1179:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 58,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1179:95:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 61,
																						"name": "name",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 18,
																						"src": "1309:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory",
																							"typeString": "string memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_string_memory",
																							"typeString": "string memory"
																						}
																					],
																					"id": 60,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "1303:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																						"typeString": "type(bytes storage pointer)"
																					},
																					"typeName": "bytes"
																				},
																				"id": 62,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1303:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 59,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 574,
																			"src": "1293:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 63,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1293:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"hexValue": "31",
																						"id": 66,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "1350:3:0",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
																							"typeString": "literal_string \"1\""
																						},
																						"value": "1"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
																							"typeString": "literal_string \"1\""
																						}
																					],
																					"id": 65,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "1344:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																						"typeString": "type(bytes storage pointer)"
																					},
																					"typeName": "bytes"
																				},
																				"id": 67,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1344:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 64,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 574,
																			"src": "1334:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 68,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1334:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 69,
																		"name": "chainId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 49,
																		"src": "1374:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 71,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 598,
																				"src": "1408:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_FOTOM_$372",
																					"typeString": "contract FOTOM"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_FOTOM_$372",
																					"typeString": "contract FOTOM"
																				}
																			],
																			"id": 70,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1400:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": "address"
																		},
																		"id": 72,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1400:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 54,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 567,
																		"src": "1150:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 55,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "encode",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1150:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1150:278:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 53,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 574,
															"src": "1126:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1126:313:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "1107:332:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 76,
												"nodeType": "ExpressionStatement",
												"src": "1107:332:0"
											}
										]
									},
									"documentation": null,
									"id": 78,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1000:2:0"
									},
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1010:0:0"
									},
									"scope": 372,
									"src": "989:458:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 111,
										"nodeType": "Block",
										"src": "1503:153:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 85,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "1514:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 88,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 82,
																"src": "1544:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 86,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "1528:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 87,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 514,
															"src": "1528:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 89,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1528:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1514:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 91,
												"nodeType": "ExpressionStatement",
												"src": "1514:36:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 92,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "1561:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 94,
														"indexExpression": {
															"argumentTypes": null,
															"id": 93,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "1571:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1561:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 99,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 82,
																"src": "1595:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 95,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 30,
																	"src": "1577:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 97,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 96,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 80,
																	"src": "1587:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1577:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 98,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 514,
															"src": "1577:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 100,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1577:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1561:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 102,
												"nodeType": "ExpressionStatement",
												"src": "1561:40:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 105,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1634:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 104,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1626:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 106,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1626:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 107,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "1638:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 108,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 82,
															"src": "1642:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 103,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 390,
														"src": "1617:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1617:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 110,
												"nodeType": "EmitStatement",
												"src": "1612:36:0"
											}
										]
									},
									"documentation": null,
									"id": 112,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "1470:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 79,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1470:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 82,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "1482:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 81,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1482:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1469:24:0"
									},
									"returnParameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1503:0:0"
									},
									"scope": 372,
									"src": "1455:201:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "1714:159:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 119,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "1725:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 121,
														"indexExpression": {
															"argumentTypes": null,
															"id": 120,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "1735:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1725:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 126,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "1763:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 122,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 30,
																	"src": "1743:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 124,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 123,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 114,
																	"src": "1753:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1743:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 536,
															"src": "1743:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 127,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1743:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1725:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 129,
												"nodeType": "ExpressionStatement",
												"src": "1725:44:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 130,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "1780:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 133,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "1810:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 131,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "1794:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 536,
															"src": "1794:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 134,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1794:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1780:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 136,
												"nodeType": "ExpressionStatement",
												"src": "1780:36:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 138,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "1841:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 140,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1855:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 139,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1847:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 141,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1847:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 142,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 116,
															"src": "1859:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 137,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 390,
														"src": "1832:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1832:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "1827:38:0"
											}
										]
									},
									"documentation": null,
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "1679:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1679:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "1693:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 115,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1693:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1678:26:0"
									},
									"returnParameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1714:0:0"
									},
									"scope": 372,
									"src": "1664:209:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 169,
										"nodeType": "Block",
										"src": "1951:99:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 155,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 36,
																"src": "1962:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 158,
															"indexExpression": {
																"argumentTypes": null,
																"id": 156,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 148,
																"src": "1972:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1962:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 159,
														"indexExpression": {
															"argumentTypes": null,
															"id": 157,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "1979:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1962:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 160,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 152,
														"src": "1990:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1962:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "1962:33:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 164,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 148,
															"src": "2020:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 165,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "2027:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 166,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "2036:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 163,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 382,
														"src": "2011:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2011:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 168,
												"nodeType": "EmitStatement",
												"src": "2006:36:0"
											}
										]
									},
									"documentation": null,
									"id": 170,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "1899:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1899:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 150,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "1914:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1914:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "1931:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 151,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1931:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1898:44:0"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1951:0:0"
									},
									"scope": 372,
									"src": "1881:169:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 207,
										"nodeType": "Block",
										"src": "2123:155:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 179,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "2134:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 181,
														"indexExpression": {
															"argumentTypes": null,
															"id": 180,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "2144:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2134:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 186,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 176,
																"src": "2172:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 182,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 30,
																	"src": "2152:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 184,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 183,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 172,
																	"src": "2162:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2152:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 185,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 536,
															"src": "2152:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 187,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2152:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2134:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 189,
												"nodeType": "ExpressionStatement",
												"src": "2134:44:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 190,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "2189:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 192,
														"indexExpression": {
															"argumentTypes": null,
															"id": 191,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 174,
															"src": "2199:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2189:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 197,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 176,
																"src": "2223:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 193,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 30,
																	"src": "2205:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 195,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 194,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 174,
																	"src": "2215:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2205:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 196,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 514,
															"src": "2205:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 198,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2205:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2189:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 200,
												"nodeType": "ExpressionStatement",
												"src": "2189:40:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 202,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "2254:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 203,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 174,
															"src": "2260:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 204,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 176,
															"src": "2264:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 201,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 390,
														"src": "2245:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2245:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 206,
												"nodeType": "EmitStatement",
												"src": "2240:30:0"
											}
										]
									},
									"documentation": null,
									"id": 208,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "2077:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2077:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "2091:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2091:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "2103:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2103:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2076:38:0"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2123:0:0"
									},
									"scope": 372,
									"src": "2058:220:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 226,
										"nodeType": "Block",
										"src": "2356:77:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 218,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 580,
																"src": "2376:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 219,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2376:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 220,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 210,
															"src": "2388:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 221,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 212,
															"src": "2397:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 217,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 170,
														"src": "2367:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2367:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 223,
												"nodeType": "ExpressionStatement",
												"src": "2367:36:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2421:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 216,
												"id": 225,
												"nodeType": "Return",
												"src": "2414:11:0"
											}
										]
									},
									"documentation": null,
									"id": 227,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "2303:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2303:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 212,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "2320:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 211,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2320:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2302:29:0"
									},
									"returnParameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "2350:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 214,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2350:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2349:6:0"
									},
									"scope": 372,
									"src": "2286:147:0",
									"stateMutability": "nonpayable",
									"superFunction": 435,
									"visibility": "external"
								},
								{
									"body": {
										"id": 245,
										"nodeType": "Block",
										"src": "2507:73:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 237,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 580,
																"src": "2528:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 238,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2528:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 239,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 229,
															"src": "2540:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 240,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 231,
															"src": "2544:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 236,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "2518:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2518:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 242,
												"nodeType": "ExpressionStatement",
												"src": "2518:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2568:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 235,
												"id": 244,
												"nodeType": "Return",
												"src": "2561:11:0"
											}
										]
									},
									"documentation": null,
									"id": 246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "2459:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2459:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 231,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "2471:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 230,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2471:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2458:24:0"
									},
									"returnParameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "2501:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 233,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2501:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2500:6:0"
									},
									"scope": 372,
									"src": "2441:139:0",
									"stateMutability": "nonpayable",
									"superFunction": 444,
									"visibility": "external"
								},
								{
									"body": {
										"id": 292,
										"nodeType": "Block",
										"src": "2672:212:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 257,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 36,
																"src": "2687:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 259,
															"indexExpression": {
																"argumentTypes": null,
																"id": 258,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 248,
																"src": "2697:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2687:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 262,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 260,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 580,
																"src": "2703:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 261,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2703:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2687:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 263,
														"name": "MAX",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "2718:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2687:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 283,
												"nodeType": "IfStatement",
												"src": "2683:135:0",
												"trueBody": {
													"id": 282,
													"nodeType": "Block",
													"src": "2723:95:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 280,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 265,
																			"name": "allowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 36,
																			"src": "2738:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 269,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 266,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 248,
																			"src": "2748:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2738:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 270,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 267,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 580,
																			"src": "2754:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 268,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "2754:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2738:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 278,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 252,
																			"src": "2800:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 271,
																					"name": "allowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 36,
																					"src": "2768:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(address => mapping(address => uint256))"
																					}
																				},
																				"id": 273,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 272,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 248,
																					"src": "2778:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "2768:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 276,
																			"indexExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 274,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 580,
																					"src": "2784:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 275,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "2784:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2768:27:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 277,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 536,
																		"src": "2768:31:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 279,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2768:38:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2738:68:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 281,
															"nodeType": "ExpressionStatement",
															"src": "2738:68:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 285,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "2838:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 286,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 250,
															"src": "2844:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 287,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 252,
															"src": "2848:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 284,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "2828:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2828:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 289,
												"nodeType": "ExpressionStatement",
												"src": "2828:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2872:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 256,
												"id": 291,
												"nodeType": "Return",
												"src": "2865:11:0"
											}
										]
									},
									"documentation": null,
									"id": 293,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 248,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "2610:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2610:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 250,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "2624:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2624:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 252,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "2636:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 251,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2636:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2609:38:0"
									},
									"returnParameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "2666:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 254,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2666:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2665:6:0"
									},
									"scope": 372,
									"src": "2588:296:0",
									"stateMutability": "nonpayable",
									"superFunction": 455,
									"visibility": "external"
								},
								{
									"body": {
										"id": 370,
										"nodeType": "Block",
										"src": "3007:551:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 314,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 311,
																"name": "deadline",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 301,
																"src": "3026:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 312,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 570,
																	"src": "3038:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 313,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "3038:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3026:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "46537761703a2045585049524544",
															"id": 315,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3055:16:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_36f6a3faa87b728b93cd3bce773503bd8b1a5a928f137befd239acee3b67ba18",
																"typeString": "literal_string \"FSwap: EXPIRED\""
															},
															"value": "FSwap: EXPIRED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_36f6a3faa87b728b93cd3bce773503bd8b1a5a928f137befd239acee3b67ba18",
																"typeString": "literal_string \"FSwap: EXPIRED\""
															}
														],
														"id": 310,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															583,
															584
														],
														"referencedDeclaration": 584,
														"src": "3018:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3018:54:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 317,
												"nodeType": "ExpressionStatement",
												"src": "3018:54:0"
											},
											{
												"assignments": [
													319
												],
												"declarations": [
													{
														"constant": false,
														"id": 319,
														"name": "digest",
														"nodeType": "VariableDeclaration",
														"scope": 370,
														"src": "3083:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 318,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3083:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 341,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "1901",
																	"id": 323,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3159:10:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string \"\u0019\u0001\""
																	},
																	"value": "\u0019\u0001"
																},
																{
																	"argumentTypes": null,
																	"id": 324,
																	"name": "DOMAIN_SEPARATOR",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 38,
																	"src": "3188:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 328,
																					"name": "PERMIT_TYPEHASH",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 41,
																					"src": "3244:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 329,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 295,
																					"src": "3261:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 330,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 297,
																					"src": "3268:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 331,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 299,
																					"src": "3277:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 335,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "++",
																					"prefix": false,
																					"src": "3284:15:0",
																					"subExpression": {
																						"argumentTypes": null,
																						"baseExpression": {
																							"argumentTypes": null,
																							"id": 332,
																							"name": "nonces",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 45,
																							"src": "3284:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																								"typeString": "mapping(address => uint256)"
																							}
																						},
																						"id": 334,
																						"indexExpression": {
																							"argumentTypes": null,
																							"id": 333,
																							"name": "owner",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 295,
																							"src": "3291:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"nodeType": "IndexAccess",
																						"src": "3284:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 336,
																					"name": "deadline",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 301,
																					"src": "3301:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 326,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 567,
																					"src": "3233:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 327,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "encode",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "3233:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																					"typeString": "function () pure returns (bytes memory)"
																				}
																			},
																			"id": 337,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3233:77:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 325,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 574,
																		"src": "3223:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 338,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3223:88:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string \"\u0019\u0001\""
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 321,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 567,
																	"src": "3124:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 322,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "3124:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 339,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3124:202:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 320,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 574,
														"src": "3100:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3100:237:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3083:254:0"
											},
											{
												"assignments": [
													343
												],
												"declarations": [
													{
														"constant": false,
														"id": 343,
														"name": "recoveredAddress",
														"nodeType": "VariableDeclaration",
														"scope": 370,
														"src": "3348:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 342,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3348:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 350,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 345,
															"name": "digest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 319,
															"src": "3385:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 346,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 303,
															"src": "3393:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"argumentTypes": null,
															"id": 347,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "3396:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 348,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "3399:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 344,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 572,
														"src": "3375:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3375:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3348:53:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 356,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 352,
																	"name": "recoveredAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 343,
																	"src": "3420:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 354,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3448:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 353,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3440:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 355,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3440:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "3420:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 359,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 357,
																	"name": "recoveredAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 343,
																	"src": "3454:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 358,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 295,
																	"src": "3474:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3454:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3420:59:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "46537761703a20494e56414c49445f5349474e4154555245",
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3481:26:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9e5411b3ad235a0abab11d4b0cf1a51e9e8f74da237b2942b3ffe587eae9f91d",
																"typeString": "literal_string \"FSwap: INVALID_SIGNATURE\""
															},
															"value": "FSwap: INVALID_SIGNATURE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9e5411b3ad235a0abab11d4b0cf1a51e9e8f74da237b2942b3ffe587eae9f91d",
																"typeString": "literal_string \"FSwap: INVALID_SIGNATURE\""
															}
														],
														"id": 351,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															583,
															584
														],
														"referencedDeclaration": 584,
														"src": "3412:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3412:96:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 363,
												"nodeType": "ExpressionStatement",
												"src": "3412:96:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 365,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 295,
															"src": "3528:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 366,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 297,
															"src": "3535:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 367,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 299,
															"src": "3544:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 364,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 170,
														"src": "3519:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3519:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 369,
												"nodeType": "ExpressionStatement",
												"src": "3519:31:0"
											}
										]
									},
									"documentation": null,
									"id": 371,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "2908:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2908:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 297,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "2923:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 296,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2923:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 299,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "2940:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 298,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2940:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 301,
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "2952:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 300,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2952:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "2967:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 302,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2967:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 305,
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "2976:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 304,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2976:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "2987:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 306,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2987:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2907:90:0"
									},
									"returnParameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3007:0:0"
									},
									"scope": 372,
									"src": "2892:666:0",
									"stateMutability": "nonpayable",
									"superFunction": 489,
									"visibility": "external"
								}
							],
							"scope": 373,
							"src": "135:3426:0"
						}
					],
					"src": "33:3530:0"
				},
				"id": 0
			},
			"contracts/interfaces/IFOTOM.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IFOTOM.sol",
					"exportedSymbols": {
						"IFOTOM": [
							490
						]
					},
					"id": 491,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 374,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:1"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 490,
							"linearizedBaseContracts": [
								490
							],
							"name": "IFOTOM",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": null,
									"id": 382,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 376,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "100:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 375,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "100:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 378,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "123:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "123:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 380,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "148:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 379,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "148:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "99:60:1"
									},
									"src": "85:75:1"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 390,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "181:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "181:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "203:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "203:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "223:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "223:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "180:54:1"
									},
									"src": "166:69:1"
								},
								{
									"body": null,
									"documentation": null,
									"id": 395,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "256:2:1"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "282:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 392,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "282:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "281:15:1"
									},
									"scope": 490,
									"src": "243:54:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 400,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "318:2:1"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "344:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 397,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "344:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "343:15:1"
									},
									"scope": 490,
									"src": "303:56:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 405,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "382:2:1"
									},
									"returnParameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "408:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 402,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "408:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "407:7:1"
									},
									"scope": 490,
									"src": "365:50:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 410,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "441:2:1"
									},
									"returnParameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 408,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "467:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 407,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "467:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "466:6:1"
									},
									"scope": 490,
									"src": "421:52:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 417,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "498:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "498:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "497:15:1"
									},
									"returnParameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "536:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 414,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "536:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "535:6:1"
									},
									"scope": 490,
									"src": "479:63:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 426,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 419,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "567:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 418,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "567:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 421,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "582:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "582:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "566:32:1"
									},
									"returnParameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "622:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 423,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "622:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "621:6:1"
									},
									"scope": 490,
									"src": "548:80:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 435,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 428,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "653:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 427,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "653:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 430,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "670:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 429,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "670:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "652:29:1"
									},
									"returnParameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 433,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "700:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 432,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "700:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "699:6:1"
									},
									"scope": 490,
									"src": "636:70:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 444,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 437,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "730:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 436,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "730:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 439,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "742:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 438,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "742:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "729:24:1"
									},
									"returnParameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 442,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "772:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 441,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "772:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "771:6:1"
									},
									"scope": 490,
									"src": "712:66:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 455,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 446,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "806:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 445,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "806:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 448,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "820:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 450,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "832:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 449,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "832:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "805:38:1"
									},
									"returnParameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "862:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 452,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "862:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "861:6:1"
									},
									"scope": 490,
									"src": "784:84:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 460,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "901:2:1"
									},
									"returnParameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 458,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "927:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 457,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "927:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "926:9:1"
									},
									"scope": 490,
									"src": "876:60:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 465,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "PERMIT_TYPEHASH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "966:2:1"
									},
									"returnParameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "992:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 462,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "992:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "991:9:1"
									},
									"scope": 490,
									"src": "942:59:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 472,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 467,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "1023:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 466,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1022:15:1"
									},
									"returnParameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "1061:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 469,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1061:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1060:6:1"
									},
									"scope": 490,
									"src": "1007:60:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 489,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 474,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "1091:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1091:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "1106:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 475,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1106:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 478,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "1123:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 477,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1123:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 480,
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "1135:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 479,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1135:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 482,
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "1150:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 481,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1150:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 484,
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "1159:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 483,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1159:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 486,
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "1170:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 485,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1170:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1090:90:1"
									},
									"returnParameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1189:0:1"
									},
									"scope": 490,
									"src": "1075:115:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 491,
							"src": "61:1132:1"
						}
					],
					"src": "33:1162:1"
				},
				"id": 1
			},
			"contracts/libraries/SafeMath.sol": {
				"ast": {
					"absolutePath": "contracts/libraries/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							565
						]
					},
					"id": 566,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 492,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "33:25:2"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 565,
							"linearizedBaseContracts": [
								565
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 513,
										"nodeType": "Block",
										"src": "254:68:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"id": 506,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"argumentTypes": null,
																			"id": 502,
																			"name": "z",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 499,
																			"src": "274:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 505,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 503,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 494,
																				"src": "278:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 504,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 496,
																				"src": "282:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "278:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "274:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 507,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "273:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 508,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 494,
																"src": "288:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "273:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "64732d6d6174682d6164642d6f766572666c6f77",
															"id": 510,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "291:22:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3903056b84ed2aba2be78662dc6c5c99b160cebe9af9bd9493d0fc28ff16f6db",
																"typeString": "literal_string \"ds-math-add-overflow\""
															},
															"value": "ds-math-add-overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3903056b84ed2aba2be78662dc6c5c99b160cebe9af9bd9493d0fc28ff16f6db",
																"typeString": "literal_string \"ds-math-add-overflow\""
															}
														],
														"id": 501,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															583,
															584
														],
														"referencedDeclaration": 584,
														"src": "265:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "265:49:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 512,
												"nodeType": "ExpressionStatement",
												"src": "265:49:2"
											}
										]
									},
									"documentation": null,
									"id": 514,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "207:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 493,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "207:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "215:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "215:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "206:16:2"
									},
									"returnParameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "246:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 498,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "246:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "245:8:2"
									},
									"scope": 565,
									"src": "194:128:2",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 535,
										"nodeType": "Block",
										"src": "390:69:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 531,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"id": 528,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"argumentTypes": null,
																			"id": 524,
																			"name": "z",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 521,
																			"src": "410:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 527,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 525,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 516,
																				"src": "414:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 526,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 518,
																				"src": "418:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "414:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "410:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 529,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "409:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 530,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 516,
																"src": "424:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "409:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "64732d6d6174682d7375622d756e646572666c6f77",
															"id": 532,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "427:23:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_03b20b9f6e6e7905f077509fd420fb44afc685f254bcefe49147296e1ba25590",
																"typeString": "literal_string \"ds-math-sub-underflow\""
															},
															"value": "ds-math-sub-underflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_03b20b9f6e6e7905f077509fd420fb44afc685f254bcefe49147296e1ba25590",
																"typeString": "literal_string \"ds-math-sub-underflow\""
															}
														],
														"id": 523,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															583,
															584
														],
														"referencedDeclaration": 584,
														"src": "401:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "401:50:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 534,
												"nodeType": "ExpressionStatement",
												"src": "401:50:2"
											}
										]
									},
									"documentation": null,
									"id": 536,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "343:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 515,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "343:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 518,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "351:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 517,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "351:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "342:16:2"
									},
									"returnParameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 521,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "382:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 520,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "382:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "381:8:2"
									},
									"scope": 565,
									"src": "330:129:2",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 563,
										"nodeType": "Block",
										"src": "527:82:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 559,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 548,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 546,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 540,
																	"src": "546:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 547,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "551:1:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "546:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 556,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"id": 553,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"argumentTypes": null,
																					"id": 549,
																					"name": "z",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 543,
																					"src": "557:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 552,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 550,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 538,
																						"src": "561:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"argumentTypes": null,
																						"id": 551,
																						"name": "y",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 540,
																						"src": "565:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "561:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "557:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 554,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "556:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 555,
																		"name": "y",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 540,
																		"src": "570:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "556:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 557,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 538,
																	"src": "575:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "556:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "546:30:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "64732d6d6174682d6d756c2d6f766572666c6f77",
															"id": 560,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "578:22:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25a0ef6406c6af6852555433653ce478274cd9f03a5dec44d001868a76b3bfdd",
																"typeString": "literal_string \"ds-math-mul-overflow\""
															},
															"value": "ds-math-mul-overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25a0ef6406c6af6852555433653ce478274cd9f03a5dec44d001868a76b3bfdd",
																"typeString": "literal_string \"ds-math-mul-overflow\""
															}
														],
														"id": 545,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															583,
															584
														],
														"referencedDeclaration": 584,
														"src": "538:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "538:63:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 562,
												"nodeType": "ExpressionStatement",
												"src": "538:63:2"
											}
										]
									},
									"documentation": null,
									"id": 564,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 538,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "480:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 537,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "480:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 540,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "488:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 539,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "488:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "479:16:2"
									},
									"returnParameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 543,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "519:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 542,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "519:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "518:8:2"
									},
									"scope": 565,
									"src": "467:142:2",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 566,
							"src": "170:442:2"
						}
					],
					"src": "33:581:2"
				},
				"id": 2
			}
		}
	}
}